Adding sequence to active sequences of type byte
Adding sequence to active sequences of type byte
Adding sequence to active sequences of type byte
Adding sequence to active sequences of type byte
Adding sequence to active sequences of type byte
Adding sequence to active sequences of type short
Adding sequence to active sequences of type short
Adding sequence to active sequences of type short
Adding sequence to active sequences of type short
Adding sequence to active sequences of type short
Adding sequence to active sequences of type int
Adding sequence to active sequences of type int
Adding sequence to active sequences of type int
Adding sequence to active sequences of type int
Adding sequence to active sequences of type int
Adding sequence to active sequences of type long
Adding sequence to active sequences of type long
Adding sequence to active sequences of type long
Adding sequence to active sequences of type long
Adding sequence to active sequences of type long
Adding sequence to active sequences of type float
Adding sequence to active sequences of type float
Adding sequence to active sequences of type float
Adding sequence to active sequences of type float
Adding sequence to active sequences of type float
Adding sequence to active sequences of type double
Adding sequence to active sequences of type double
Adding sequence to active sequences of type double
Adding sequence to active sequences of type double
Adding sequence to active sequences of type double
Adding sequence to active sequences of type char
Adding sequence to active sequences of type char
Adding sequence to active sequences of type char
Adding sequence to active sequences of type char
Adding sequence to active sequences of type boolean
Adding sequence to active sequences of type boolean
Adding sequence to active sequences of type class java.lang.String
Adding sequence to active sequences of type class java.lang.String
getActivesequencesThatYield: entering method, clazz=boolean
getActivesequencesThatYield: returning 2 sequences.
getActivesequencesThatYield: entering method, clazz=byte
getActivesequencesThatYield: returning 5 sequences.
getActivesequencesThatYield: entering method, clazz=char
getActivesequencesThatYield: returning 4 sequences.
getActivesequencesThatYield: entering method, clazz=double
getActivesequencesThatYield: returning 5 sequences.
getActivesequencesThatYield: entering method, clazz=float
getActivesequencesThatYield: returning 5 sequences.
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
getActivesequencesThatYield: entering method, clazz=short
getActivesequencesThatYield: returning 5 sequences.
getActivesequencesThatYield: entering method, clazz=class java.lang.String
getActivesequencesThatYield: returning 2 sequences.
Statements : 
java.lang.Object.<init>()
Package_0.ClassId_0.k_0(int)
Package_0.ClassId_0.m_0()
Package_0.ClassId_0.<init>()
Package_1.ClassId_1.<init>()
Initial sequences (seeds):
var0 =  prim : byte:-1 : 

var0 =  prim : byte:0 : 

var0 =  prim : byte:1 : 

var0 =  prim : byte:10 : 

var0 =  prim : byte:100 : 

var0 =  prim : short:-1 : 

var0 =  prim : short:0 : 

var0 =  prim : short:1 : 

var0 =  prim : short:10 : 

var0 =  prim : short:100 : 

var0 =  prim : int:-1 : 

var0 =  prim : int:0 : 

var0 =  prim : int:1 : 

var0 =  prim : int:10 : 

var0 =  prim : int:100 : 

var0 =  prim : long:-1 : 

var0 =  prim : long:0 : 

var0 =  prim : long:1 : 

var0 =  prim : long:10 : 

var0 =  prim : long:100 : 

var0 =  prim : float:-1.0 : 

var0 =  prim : float:0.0 : 

var0 =  prim : float:1.0 : 

var0 =  prim : float:10.0 : 

var0 =  prim : float:100.0 : 

var0 =  prim : double:-1.0 : 

var0 =  prim : double:0.0 : 

var0 =  prim : double:1.0 : 

var0 =  prim : double:10.0 : 

var0 =  prim : double:100.0 : 

var0 =  prim : char:23 : 

var0 =  prim : char:20 : 

var0 =  prim : char:34 : 

var0 =  prim : char:61 : 

var0 =  prim : boolean:true : 

var0 =  prim : boolean:false : 

var0 =  prim : java.lang.String:"" : 

var0 =  prim : java.lang.String:"hi!" : 

-------------------------------------------
randoop.util.Randomness: total calls to random: 1
Selected statement: java.lang.Object.<init>()
Successfully created new unique sequence:var0 =  cons : java.lang.Object.<init>() : 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Adding sequence to active sequences of type class java.lang.Object
Sequence after execution: 
java.lang.Object var0 = new java.lang.Object();
// <NormalExecution object=object-of-type-java.lang.Object>;

allSequences.size()=1
-------------------------------------------
randoop.util.Randomness: total calls to random: 2
Selected statement: Package_1.ClassId_1.<init>()
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;

allSequences.size()=2
-------------------------------------------
randoop.util.Randomness: total calls to random: 3
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 1 sequences.
components: 1
randoop.util.Randomness: total calls to random: 4
randoop.util.Randomness: total calls to random: 5
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true

allSequences.size()=3
-------------------------------------------
randoop.util.Randomness: total calls to random: 6
Selected statement: Package_0.ClassId_0.<init>()
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;

allSequences.size()=4
-------------------------------------------
randoop.util.Randomness: total calls to random: 7
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 3 sequences.
components: 3
randoop.util.Randomness: total calls to random: 8
randoop.util.Randomness: total calls to random: 9
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 10
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 3 sequences.
components: 3
randoop.util.Randomness: total calls to random: 11
randoop.util.Randomness: total calls to random: 12
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true

allSequences.size()=5
-------------------------------------------
randoop.util.Randomness: total calls to random: 13
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 4 sequences.
components: 4
randoop.util.Randomness: total calls to random: 14
randoop.util.Randomness: total calls to random: 15
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 16
randoop.util.Randomness: total calls to random: 17
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true

allSequences.size()=6
-------------------------------------------
randoop.util.Randomness: total calls to random: 18
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 19
randoop.util.Randomness: total calls to random: 20
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 21
randoop.util.Randomness: total calls to random: 22
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true

allSequences.size()=7
-------------------------------------------
randoop.util.Randomness: total calls to random: 23
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 6 sequences.
components: 6
randoop.util.Randomness: total calls to random: 24
randoop.util.Randomness: total calls to random: 25
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 26
randoop.util.Randomness: total calls to random: 27
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true

allSequences.size()=8
-------------------------------------------
randoop.util.Randomness: total calls to random: 28
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 7 sequences.
components: 7
randoop.util.Randomness: total calls to random: 29
randoop.util.Randomness: total calls to random: 30
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 31
randoop.util.Randomness: total calls to random: 32
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=9
-------------------------------------------
randoop.util.Randomness: total calls to random: 33
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 8 sequences.
components: 8
randoop.util.Randomness: total calls to random: 34
randoop.util.Randomness: total calls to random: 35
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 36
randoop.util.Randomness: total calls to random: 37
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=10
-------------------------------------------
randoop.util.Randomness: total calls to random: 38
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 9 sequences.
components: 9
randoop.util.Randomness: total calls to random: 39
randoop.util.Randomness: total calls to random: 40
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 41
randoop.util.Randomness: total calls to random: 42
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=11
-------------------------------------------
randoop.util.Randomness: total calls to random: 43
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 10 sequences.
components: 10
randoop.util.Randomness: total calls to random: 44
randoop.util.Randomness: total calls to random: 45
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 46
randoop.util.Randomness: total calls to random: 47
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true

allSequences.size()=12
-------------------------------------------
randoop.util.Randomness: total calls to random: 48
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 11 sequences.
components: 11
randoop.util.Randomness: total calls to random: 49
randoop.util.Randomness: total calls to random: 50
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true

allSequences.size()=13
-------------------------------------------
randoop.util.Randomness: total calls to random: 51
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 12 sequences.
components: 12
randoop.util.Randomness: total calls to random: 52
randoop.util.Randomness: total calls to random: 53
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true

allSequences.size()=14
-------------------------------------------
randoop.util.Randomness: total calls to random: 54
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 13 sequences.
components: 13
randoop.util.Randomness: total calls to random: 55
randoop.util.Randomness: total calls to random: 56
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_0.m_0() : var0 
var3 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true

allSequences.size()=15
-------------------------------------------
randoop.util.Randomness: total calls to random: 57
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 14 sequences.
components: 14
randoop.util.Randomness: total calls to random: 58
randoop.util.Randomness: total calls to random: 59
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 60
randoop.util.Randomness: total calls to random: 61
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_0.m_0() : var0 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true

allSequences.size()=16
-------------------------------------------
randoop.util.Randomness: total calls to random: 62
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 15 sequences.
components: 15
randoop.util.Randomness: total calls to random: 63
randoop.util.Randomness: total calls to random: 64
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 65
randoop.util.Randomness: total calls to random: 66
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=17
-------------------------------------------
randoop.util.Randomness: total calls to random: 67
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 16 sequences.
components: 16
randoop.util.Randomness: total calls to random: 68
randoop.util.Randomness: total calls to random: 69
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 70
randoop.util.Randomness: total calls to random: 71
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=18
-------------------------------------------
randoop.util.Randomness: total calls to random: 72
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 17 sequences.
components: 17
randoop.util.Randomness: total calls to random: 73
randoop.util.Randomness: total calls to random: 74
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=19
-------------------------------------------
randoop.util.Randomness: total calls to random: 75
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 18 sequences.
components: 18
randoop.util.Randomness: total calls to random: 76
randoop.util.Randomness: total calls to random: 77
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 78
randoop.util.Randomness: total calls to random: 79
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true

allSequences.size()=20
-------------------------------------------
randoop.util.Randomness: total calls to random: 80
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 19 sequences.
components: 19
randoop.util.Randomness: total calls to random: 81
randoop.util.Randomness: total calls to random: 82
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 83
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 19 sequences.
components: 19
randoop.util.Randomness: total calls to random: 84
randoop.util.Randomness: total calls to random: 85
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 86
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 19 sequences.
components: 19
randoop.util.Randomness: total calls to random: 87
randoop.util.Randomness: total calls to random: 88
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 89
randoop.util.Randomness: total calls to random: 90
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=21
-------------------------------------------
randoop.util.Randomness: total calls to random: 91
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 20 sequences.
components: 20
randoop.util.Randomness: total calls to random: 92
randoop.util.Randomness: total calls to random: 93
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 94
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 20 sequences.
components: 20
randoop.util.Randomness: total calls to random: 95
randoop.util.Randomness: total calls to random: 96
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 97
randoop.util.Randomness: total calls to random: 98
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=22
-------------------------------------------
randoop.util.Randomness: total calls to random: 99
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 21 sequences.
components: 21
randoop.util.Randomness: total calls to random: 100
randoop.util.Randomness: total calls to random: 101
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=23
-------------------------------------------
randoop.util.Randomness: total calls to random: 102
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 22 sequences.
components: 22
randoop.util.Randomness: total calls to random: 103
randoop.util.Randomness: total calls to random: 104
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 105
randoop.util.Randomness: total calls to random: 106
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:1 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true

allSequences.size()=24
-------------------------------------------
randoop.util.Randomness: total calls to random: 107
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 23 sequences.
components: 23
randoop.util.Randomness: total calls to random: 108
randoop.util.Randomness: total calls to random: 109
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 110
randoop.util.Randomness: total calls to random: 111
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:10 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=25
-------------------------------------------
randoop.util.Randomness: total calls to random: 112
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 24 sequences.
components: 24
randoop.util.Randomness: total calls to random: 113
randoop.util.Randomness: total calls to random: 114
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 115
randoop.util.Randomness: total calls to random: 116
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=26
-------------------------------------------
randoop.util.Randomness: total calls to random: 117
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 25 sequences.
components: 25
randoop.util.Randomness: total calls to random: 118
randoop.util.Randomness: total calls to random: 119
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=27
-------------------------------------------
randoop.util.Randomness: total calls to random: 120
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 26 sequences.
components: 26
randoop.util.Randomness: total calls to random: 121
randoop.util.Randomness: total calls to random: 122
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 123
randoop.util.Randomness: total calls to random: 124
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=28
-------------------------------------------
randoop.util.Randomness: total calls to random: 125
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 27 sequences.
components: 27
randoop.util.Randomness: total calls to random: 126
randoop.util.Randomness: total calls to random: 127
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=29
-------------------------------------------
randoop.util.Randomness: total calls to random: 128
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 28 sequences.
components: 28
randoop.util.Randomness: total calls to random: 129
randoop.util.Randomness: total calls to random: 130
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true

allSequences.size()=30
-------------------------------------------
randoop.util.Randomness: total calls to random: 131
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 29 sequences.
components: 29
randoop.util.Randomness: total calls to random: 132
randoop.util.Randomness: total calls to random: 133
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 134
randoop.util.Randomness: total calls to random: 135
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 
var9 =  prim : int:-1 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=31
-------------------------------------------
randoop.util.Randomness: total calls to random: 136
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 30 sequences.
components: 30
randoop.util.Randomness: total calls to random: 137
randoop.util.Randomness: total calls to random: 138
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 139
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 30 sequences.
components: 30
randoop.util.Randomness: total calls to random: 140
randoop.util.Randomness: total calls to random: 141
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 142
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 30 sequences.
components: 30
randoop.util.Randomness: total calls to random: 143
randoop.util.Randomness: total calls to random: 144
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 145
randoop.util.Randomness: total calls to random: 146
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=32
-------------------------------------------
randoop.util.Randomness: total calls to random: 147
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 31 sequences.
components: 31
randoop.util.Randomness: total calls to random: 148
randoop.util.Randomness: total calls to random: 149
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 150
randoop.util.Randomness: total calls to random: 151
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=33
-------------------------------------------
randoop.util.Randomness: total calls to random: 152
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 32 sequences.
components: 32
randoop.util.Randomness: total calls to random: 153
randoop.util.Randomness: total calls to random: 154
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 155
randoop.util.Randomness: total calls to random: 156
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=34
-------------------------------------------
randoop.util.Randomness: total calls to random: 157
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 33 sequences.
components: 33
randoop.util.Randomness: total calls to random: 158
randoop.util.Randomness: total calls to random: 159
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_0.m_0() : var0 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true

allSequences.size()=35
-------------------------------------------
randoop.util.Randomness: total calls to random: 160
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 34 sequences.
components: 34
randoop.util.Randomness: total calls to random: 161
randoop.util.Randomness: total calls to random: 162
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 163
randoop.util.Randomness: total calls to random: 164
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=36
-------------------------------------------
randoop.util.Randomness: total calls to random: 165
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 35 sequences.
components: 35
randoop.util.Randomness: total calls to random: 166
randoop.util.Randomness: total calls to random: 167
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 168
randoop.util.Randomness: total calls to random: 169
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=37
-------------------------------------------
randoop.util.Randomness: total calls to random: 170
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 36 sequences.
components: 36
randoop.util.Randomness: total calls to random: 171
randoop.util.Randomness: total calls to random: 172
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=38
-------------------------------------------
randoop.util.Randomness: total calls to random: 173
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 37 sequences.
components: 37
randoop.util.Randomness: total calls to random: 174
randoop.util.Randomness: total calls to random: 175
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=39
-------------------------------------------
randoop.util.Randomness: total calls to random: 176
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 38 sequences.
components: 38
randoop.util.Randomness: total calls to random: 177
randoop.util.Randomness: total calls to random: 178
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 179
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 38 sequences.
components: 38
randoop.util.Randomness: total calls to random: 180
randoop.util.Randomness: total calls to random: 181
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=40
-------------------------------------------
randoop.util.Randomness: total calls to random: 182
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 39 sequences.
components: 39
randoop.util.Randomness: total calls to random: 183
randoop.util.Randomness: total calls to random: 184
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 185
randoop.util.Randomness: total calls to random: 186
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true

allSequences.size()=41
-------------------------------------------
randoop.util.Randomness: total calls to random: 187
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 40 sequences.
components: 40
randoop.util.Randomness: total calls to random: 188
randoop.util.Randomness: total calls to random: 189
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 190
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 40 sequences.
components: 40
randoop.util.Randomness: total calls to random: 191
randoop.util.Randomness: total calls to random: 192
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 193
randoop.util.Randomness: total calls to random: 194
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=42
-------------------------------------------
randoop.util.Randomness: total calls to random: 195
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 41 sequences.
components: 41
randoop.util.Randomness: total calls to random: 196
randoop.util.Randomness: total calls to random: 197
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 198
randoop.util.Randomness: total calls to random: 199
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:100 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=43
-------------------------------------------
randoop.util.Randomness: total calls to random: 200
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 42 sequences.
components: 42
randoop.util.Randomness: total calls to random: 201
randoop.util.Randomness: total calls to random: 202
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 203
randoop.util.Randomness: total calls to random: 204
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=44
-------------------------------------------
randoop.util.Randomness: total calls to random: 205
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 43 sequences.
components: 43
randoop.util.Randomness: total calls to random: 206
randoop.util.Randomness: total calls to random: 207
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=45
-------------------------------------------
randoop.util.Randomness: total calls to random: 208
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 44 sequences.
components: 44
randoop.util.Randomness: total calls to random: 209
randoop.util.Randomness: total calls to random: 210
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 211
randoop.util.Randomness: total calls to random: 212
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=46
-------------------------------------------
randoop.util.Randomness: total calls to random: 213
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 45 sequences.
components: 45
randoop.util.Randomness: total calls to random: 214
randoop.util.Randomness: total calls to random: 215
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=47
-------------------------------------------
randoop.util.Randomness: total calls to random: 216
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 46 sequences.
components: 46
randoop.util.Randomness: total calls to random: 217
randoop.util.Randomness: total calls to random: 218
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 219
randoop.util.Randomness: total calls to random: 220
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=48
-------------------------------------------
randoop.util.Randomness: total calls to random: 221
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 47 sequences.
components: 47
randoop.util.Randomness: total calls to random: 222
randoop.util.Randomness: total calls to random: 223
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=49
-------------------------------------------
randoop.util.Randomness: total calls to random: 224
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 48 sequences.
components: 48
randoop.util.Randomness: total calls to random: 225
randoop.util.Randomness: total calls to random: 226
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=50
-------------------------------------------
randoop.util.Randomness: total calls to random: 227
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 49 sequences.
components: 49
randoop.util.Randomness: total calls to random: 228
randoop.util.Randomness: total calls to random: 229
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 230
randoop.util.Randomness: total calls to random: 231
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=51
-------------------------------------------
randoop.util.Randomness: total calls to random: 232
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 50 sequences.
components: 50
randoop.util.Randomness: total calls to random: 233
randoop.util.Randomness: total calls to random: 234
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 235
randoop.util.Randomness: total calls to random: 236
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 237
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 50 sequences.
components: 50
randoop.util.Randomness: total calls to random: 238
randoop.util.Randomness: total calls to random: 239
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 240
randoop.util.Randomness: total calls to random: 241
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=52
-------------------------------------------
randoop.util.Randomness: total calls to random: 242
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 51 sequences.
components: 51
randoop.util.Randomness: total calls to random: 243
randoop.util.Randomness: total calls to random: 244
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 245
randoop.util.Randomness: total calls to random: 246
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:100 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=53
-------------------------------------------
randoop.util.Randomness: total calls to random: 247
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 52 sequences.
components: 52
randoop.util.Randomness: total calls to random: 248
randoop.util.Randomness: total calls to random: 249
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 250
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 52 sequences.
components: 52
randoop.util.Randomness: total calls to random: 251
randoop.util.Randomness: total calls to random: 252
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 253
randoop.util.Randomness: total calls to random: 254
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=54
-------------------------------------------
randoop.util.Randomness: total calls to random: 255
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 53 sequences.
components: 53
randoop.util.Randomness: total calls to random: 256
randoop.util.Randomness: total calls to random: 257
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true

allSequences.size()=55
-------------------------------------------
randoop.util.Randomness: total calls to random: 258
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 54 sequences.
components: 54
randoop.util.Randomness: total calls to random: 259
randoop.util.Randomness: total calls to random: 260
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 261
randoop.util.Randomness: total calls to random: 262
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:10 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=56
-------------------------------------------
randoop.util.Randomness: total calls to random: 263
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 55 sequences.
components: 55
randoop.util.Randomness: total calls to random: 264
randoop.util.Randomness: total calls to random: 265
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 266
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 55 sequences.
components: 55
randoop.util.Randomness: total calls to random: 267
randoop.util.Randomness: total calls to random: 268
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 269
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 55 sequences.
components: 55
randoop.util.Randomness: total calls to random: 270
randoop.util.Randomness: total calls to random: 271
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 272
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 55 sequences.
components: 55
randoop.util.Randomness: total calls to random: 273
randoop.util.Randomness: total calls to random: 274
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 275
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 55 sequences.
components: 55
randoop.util.Randomness: total calls to random: 276
randoop.util.Randomness: total calls to random: 277
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 278
randoop.util.Randomness: total calls to random: 279
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 280
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 55 sequences.
components: 55
randoop.util.Randomness: total calls to random: 281
randoop.util.Randomness: total calls to random: 282
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 283
randoop.util.Randomness: total calls to random: 284
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:10 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:-1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=57
-------------------------------------------
randoop.util.Randomness: total calls to random: 285
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 56 sequences.
components: 56
randoop.util.Randomness: total calls to random: 286
randoop.util.Randomness: total calls to random: 287
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=58
-------------------------------------------
randoop.util.Randomness: total calls to random: 288
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 57 sequences.
components: 57
randoop.util.Randomness: total calls to random: 289
randoop.util.Randomness: total calls to random: 290
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 291
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 57 sequences.
components: 57
randoop.util.Randomness: total calls to random: 292
randoop.util.Randomness: total calls to random: 293
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 294
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 57 sequences.
components: 57
randoop.util.Randomness: total calls to random: 295
randoop.util.Randomness: total calls to random: 296
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 297
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 57 sequences.
components: 57
randoop.util.Randomness: total calls to random: 298
randoop.util.Randomness: total calls to random: 299
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 300
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 57 sequences.
components: 57
randoop.util.Randomness: total calls to random: 301
randoop.util.Randomness: total calls to random: 302
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 303
randoop.util.Randomness: total calls to random: 304
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=59
-------------------------------------------
randoop.util.Randomness: total calls to random: 305
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 58 sequences.
components: 58
randoop.util.Randomness: total calls to random: 306
randoop.util.Randomness: total calls to random: 307
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 308
randoop.util.Randomness: total calls to random: 309
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:10 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=60
-------------------------------------------
randoop.util.Randomness: total calls to random: 310
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 59 sequences.
components: 59
randoop.util.Randomness: total calls to random: 311
randoop.util.Randomness: total calls to random: 312
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 313
randoop.util.Randomness: total calls to random: 314
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=61
-------------------------------------------
randoop.util.Randomness: total calls to random: 315
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 60 sequences.
components: 60
randoop.util.Randomness: total calls to random: 316
randoop.util.Randomness: total calls to random: 317
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 318
randoop.util.Randomness: total calls to random: 319
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true

allSequences.size()=62
-------------------------------------------
randoop.util.Randomness: total calls to random: 320
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 61 sequences.
components: 61
randoop.util.Randomness: total calls to random: 321
randoop.util.Randomness: total calls to random: 322
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=63
-------------------------------------------
randoop.util.Randomness: total calls to random: 323
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 62 sequences.
components: 62
randoop.util.Randomness: total calls to random: 324
randoop.util.Randomness: total calls to random: 325
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=64
-------------------------------------------
randoop.util.Randomness: total calls to random: 326
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 63 sequences.
components: 63
randoop.util.Randomness: total calls to random: 327
randoop.util.Randomness: total calls to random: 328
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true

allSequences.size()=65
-------------------------------------------
randoop.util.Randomness: total calls to random: 329
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 64 sequences.
components: 64
randoop.util.Randomness: total calls to random: 330
randoop.util.Randomness: total calls to random: 331
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=66
-------------------------------------------
randoop.util.Randomness: total calls to random: 332
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 65 sequences.
components: 65
randoop.util.Randomness: total calls to random: 333
randoop.util.Randomness: total calls to random: 334
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 335
randoop.util.Randomness: total calls to random: 336
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 337
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 65 sequences.
components: 65
randoop.util.Randomness: total calls to random: 338
randoop.util.Randomness: total calls to random: 339
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 340
randoop.util.Randomness: total calls to random: 341
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=67
-------------------------------------------
randoop.util.Randomness: total calls to random: 342
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 66 sequences.
components: 66
randoop.util.Randomness: total calls to random: 343
randoop.util.Randomness: total calls to random: 344
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 345
randoop.util.Randomness: total calls to random: 346
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:1 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:0 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=68
-------------------------------------------
randoop.util.Randomness: total calls to random: 347
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 67 sequences.
components: 67
randoop.util.Randomness: total calls to random: 348
randoop.util.Randomness: total calls to random: 349
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=69
-------------------------------------------
randoop.util.Randomness: total calls to random: 350
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 68 sequences.
components: 68
randoop.util.Randomness: total calls to random: 351
randoop.util.Randomness: total calls to random: 352
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:10 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=70
-------------------------------------------
randoop.util.Randomness: total calls to random: 353
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 69 sequences.
components: 69
randoop.util.Randomness: total calls to random: 354
randoop.util.Randomness: total calls to random: 355
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 356
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 69 sequences.
components: 69
randoop.util.Randomness: total calls to random: 357
randoop.util.Randomness: total calls to random: 358
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 359
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 69 sequences.
components: 69
randoop.util.Randomness: total calls to random: 360
randoop.util.Randomness: total calls to random: 361
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:1 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true

allSequences.size()=71
-------------------------------------------
randoop.util.Randomness: total calls to random: 362
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 70 sequences.
components: 70
randoop.util.Randomness: total calls to random: 363
randoop.util.Randomness: total calls to random: 364
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 365
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 70 sequences.
components: 70
randoop.util.Randomness: total calls to random: 366
randoop.util.Randomness: total calls to random: 367
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 368
randoop.util.Randomness: total calls to random: 369
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=72
-------------------------------------------
randoop.util.Randomness: total calls to random: 370
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 71 sequences.
components: 71
randoop.util.Randomness: total calls to random: 371
randoop.util.Randomness: total calls to random: 372
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 373
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 71 sequences.
components: 71
randoop.util.Randomness: total calls to random: 374
randoop.util.Randomness: total calls to random: 375
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 376
randoop.util.Randomness: total calls to random: 377
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:100 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=73
-------------------------------------------
randoop.util.Randomness: total calls to random: 378
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 72 sequences.
components: 72
randoop.util.Randomness: total calls to random: 379
randoop.util.Randomness: total calls to random: 380
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 381
randoop.util.Randomness: total calls to random: 382
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 383
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 72 sequences.
components: 72
randoop.util.Randomness: total calls to random: 384
randoop.util.Randomness: total calls to random: 385
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 386
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 72 sequences.
components: 72
randoop.util.Randomness: total calls to random: 387
randoop.util.Randomness: total calls to random: 388
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 389
randoop.util.Randomness: total calls to random: 390
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=74
-------------------------------------------
randoop.util.Randomness: total calls to random: 391
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 73 sequences.
components: 73
randoop.util.Randomness: total calls to random: 392
randoop.util.Randomness: total calls to random: 393
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true

allSequences.size()=75
-------------------------------------------
randoop.util.Randomness: total calls to random: 394
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 74 sequences.
components: 74
randoop.util.Randomness: total calls to random: 395
randoop.util.Randomness: total calls to random: 396
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 397
randoop.util.Randomness: total calls to random: 398
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  prim : int:10 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=76
-------------------------------------------
randoop.util.Randomness: total calls to random: 399
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 75 sequences.
components: 75
randoop.util.Randomness: total calls to random: 400
randoop.util.Randomness: total calls to random: 401
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=77
-------------------------------------------
randoop.util.Randomness: total calls to random: 402
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 76 sequences.
components: 76
randoop.util.Randomness: total calls to random: 403
randoop.util.Randomness: total calls to random: 404
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 405
randoop.util.Randomness: total calls to random: 406
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  prim : int:1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=78
-------------------------------------------
randoop.util.Randomness: total calls to random: 407
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 77 sequences.
components: 77
randoop.util.Randomness: total calls to random: 408
randoop.util.Randomness: total calls to random: 409
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=79
-------------------------------------------
randoop.util.Randomness: total calls to random: 410
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 78 sequences.
components: 78
randoop.util.Randomness: total calls to random: 411
randoop.util.Randomness: total calls to random: 412
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 413
randoop.util.Randomness: total calls to random: 414
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:10 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=80
-------------------------------------------
randoop.util.Randomness: total calls to random: 415
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 79 sequences.
components: 79
randoop.util.Randomness: total calls to random: 416
randoop.util.Randomness: total calls to random: 417
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:1 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:0 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=81
-------------------------------------------
randoop.util.Randomness: total calls to random: 418
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 80 sequences.
components: 80
randoop.util.Randomness: total calls to random: 419
randoop.util.Randomness: total calls to random: 420
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 421
randoop.util.Randomness: total calls to random: 422
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=82
-------------------------------------------
randoop.util.Randomness: total calls to random: 423
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 81 sequences.
components: 81
randoop.util.Randomness: total calls to random: 424
randoop.util.Randomness: total calls to random: 425
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 426
randoop.util.Randomness: total calls to random: 427
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=83
-------------------------------------------
randoop.util.Randomness: total calls to random: 428
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 82 sequences.
components: 82
randoop.util.Randomness: total calls to random: 429
randoop.util.Randomness: total calls to random: 430
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 431
randoop.util.Randomness: total calls to random: 432
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 433
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 82 sequences.
components: 82
randoop.util.Randomness: total calls to random: 434
randoop.util.Randomness: total calls to random: 435
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 436
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 82 sequences.
components: 82
randoop.util.Randomness: total calls to random: 437
randoop.util.Randomness: total calls to random: 438
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:10 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:-1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=84
-------------------------------------------
randoop.util.Randomness: total calls to random: 439
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 83 sequences.
components: 83
randoop.util.Randomness: total calls to random: 440
randoop.util.Randomness: total calls to random: 441
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  method : Package_0.ClassId_0.m_0() : var0 
var14 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=85
-------------------------------------------
randoop.util.Randomness: total calls to random: 442
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 84 sequences.
components: 84
randoop.util.Randomness: total calls to random: 443
randoop.util.Randomness: total calls to random: 444
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=86
-------------------------------------------
randoop.util.Randomness: total calls to random: 445
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 85 sequences.
components: 85
randoop.util.Randomness: total calls to random: 446
randoop.util.Randomness: total calls to random: 447
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  prim : int:1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=87
-------------------------------------------
randoop.util.Randomness: total calls to random: 448
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 86 sequences.
components: 86
randoop.util.Randomness: total calls to random: 449
randoop.util.Randomness: total calls to random: 450
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 451
randoop.util.Randomness: total calls to random: 452
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:-1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=88
-------------------------------------------
randoop.util.Randomness: total calls to random: 453
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 87 sequences.
components: 87
randoop.util.Randomness: total calls to random: 454
randoop.util.Randomness: total calls to random: 455
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=89
-------------------------------------------
randoop.util.Randomness: total calls to random: 456
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 88 sequences.
components: 88
randoop.util.Randomness: total calls to random: 457
randoop.util.Randomness: total calls to random: 458
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:-1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=90
-------------------------------------------
randoop.util.Randomness: total calls to random: 459
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 89 sequences.
components: 89
randoop.util.Randomness: total calls to random: 460
randoop.util.Randomness: total calls to random: 461
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 462
randoop.util.Randomness: total calls to random: 463
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 464
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 89 sequences.
components: 89
randoop.util.Randomness: total calls to random: 465
randoop.util.Randomness: total calls to random: 466
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 467
randoop.util.Randomness: total calls to random: 468
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:10 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:-1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:-1 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=91
-------------------------------------------
randoop.util.Randomness: total calls to random: 469
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 90 sequences.
components: 90
randoop.util.Randomness: total calls to random: 470
randoop.util.Randomness: total calls to random: 471
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=92
-------------------------------------------
randoop.util.Randomness: total calls to random: 472
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 91 sequences.
components: 91
randoop.util.Randomness: total calls to random: 473
randoop.util.Randomness: total calls to random: 474
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=93
-------------------------------------------
randoop.util.Randomness: total calls to random: 475
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 92 sequences.
components: 92
randoop.util.Randomness: total calls to random: 476
randoop.util.Randomness: total calls to random: 477
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 478
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 92 sequences.
components: 92
randoop.util.Randomness: total calls to random: 479
randoop.util.Randomness: total calls to random: 480
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 481
randoop.util.Randomness: total calls to random: 482
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=94
-------------------------------------------
randoop.util.Randomness: total calls to random: 483
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 93 sequences.
components: 93
randoop.util.Randomness: total calls to random: 484
randoop.util.Randomness: total calls to random: 485
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 486
randoop.util.Randomness: total calls to random: 487
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true

allSequences.size()=95
-------------------------------------------
randoop.util.Randomness: total calls to random: 488
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 94 sequences.
components: 94
randoop.util.Randomness: total calls to random: 489
randoop.util.Randomness: total calls to random: 490
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  prim : int:1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=96
-------------------------------------------
randoop.util.Randomness: total calls to random: 491
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 95 sequences.
components: 95
randoop.util.Randomness: total calls to random: 492
randoop.util.Randomness: total calls to random: 493
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 494
randoop.util.Randomness: total calls to random: 495
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 
var17 =  prim : int:-1 : 
var18 =  method : Package_0.ClassId_0.k_0(int) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var17 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var18 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true

allSequences.size()=97
-------------------------------------------
randoop.util.Randomness: total calls to random: 496
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 96 sequences.
components: 96
randoop.util.Randomness: total calls to random: 497
randoop.util.Randomness: total calls to random: 498
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 499
randoop.util.Randomness: total calls to random: 500
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  prim : int:1 : 
var13 =  method : Package_0.ClassId_0.k_0(int) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var12 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var13 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=98
-------------------------------------------
randoop.util.Randomness: total calls to random: 501
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 97 sequences.
components: 97
randoop.util.Randomness: total calls to random: 502
randoop.util.Randomness: total calls to random: 503
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 504
randoop.util.Randomness: total calls to random: 505
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=99
-------------------------------------------
randoop.util.Randomness: total calls to random: 506
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 98 sequences.
components: 98
randoop.util.Randomness: total calls to random: 507
randoop.util.Randomness: total calls to random: 508
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:10 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=100
-------------------------------------------
randoop.util.Randomness: total calls to random: 509
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 99 sequences.
components: 99
randoop.util.Randomness: total calls to random: 510
randoop.util.Randomness: total calls to random: 511
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 512
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 99 sequences.
components: 99
randoop.util.Randomness: total calls to random: 513
randoop.util.Randomness: total calls to random: 514
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 515
randoop.util.Randomness: total calls to random: 516
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:10 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 
var9 =  prim : int:1 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=101
-------------------------------------------
randoop.util.Randomness: total calls to random: 517
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 100 sequences.
components: 100
randoop.util.Randomness: total calls to random: 518
randoop.util.Randomness: total calls to random: 519
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 520
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 100 sequences.
components: 100
randoop.util.Randomness: total calls to random: 521
randoop.util.Randomness: total calls to random: 522
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 523
randoop.util.Randomness: total calls to random: 524
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:10 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true

allSequences.size()=102
-------------------------------------------
randoop.util.Randomness: total calls to random: 525
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 101 sequences.
components: 101
randoop.util.Randomness: total calls to random: 526
randoop.util.Randomness: total calls to random: 527
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 528
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 101 sequences.
components: 101
randoop.util.Randomness: total calls to random: 529
randoop.util.Randomness: total calls to random: 530
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 531
randoop.util.Randomness: total calls to random: 532
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:10 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=103
-------------------------------------------
randoop.util.Randomness: total calls to random: 533
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 102 sequences.
components: 102
randoop.util.Randomness: total calls to random: 534
randoop.util.Randomness: total calls to random: 535
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 536
randoop.util.Randomness: total calls to random: 537
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 538
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 102 sequences.
components: 102
randoop.util.Randomness: total calls to random: 539
randoop.util.Randomness: total calls to random: 540
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 541
randoop.util.Randomness: total calls to random: 542
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:0 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=104
-------------------------------------------
randoop.util.Randomness: total calls to random: 543
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 103 sequences.
components: 103
randoop.util.Randomness: total calls to random: 544
randoop.util.Randomness: total calls to random: 545
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 546
randoop.util.Randomness: total calls to random: 547
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:-1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:-1 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=105
-------------------------------------------
randoop.util.Randomness: total calls to random: 548
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 104 sequences.
components: 104
randoop.util.Randomness: total calls to random: 549
randoop.util.Randomness: total calls to random: 550
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:10 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=106
-------------------------------------------
randoop.util.Randomness: total calls to random: 551
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 105 sequences.
components: 105
randoop.util.Randomness: total calls to random: 552
randoop.util.Randomness: total calls to random: 553
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=107
-------------------------------------------
randoop.util.Randomness: total calls to random: 554
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 106 sequences.
components: 106
randoop.util.Randomness: total calls to random: 555
randoop.util.Randomness: total calls to random: 556
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 
var17 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var17 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=1 [var17]  : true

allSequences.size()=108
-------------------------------------------
randoop.util.Randomness: total calls to random: 557
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 107 sequences.
components: 107
randoop.util.Randomness: total calls to random: 558
randoop.util.Randomness: total calls to random: 559
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 560
randoop.util.Randomness: total calls to random: 561
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:10 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:-1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:-1 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=109
-------------------------------------------
randoop.util.Randomness: total calls to random: 562
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 108 sequences.
components: 108
randoop.util.Randomness: total calls to random: 563
randoop.util.Randomness: total calls to random: 564
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 565
randoop.util.Randomness: total calls to random: 566
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 567
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 108 sequences.
components: 108
randoop.util.Randomness: total calls to random: 568
randoop.util.Randomness: total calls to random: 569
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 570
randoop.util.Randomness: total calls to random: 571
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 
var17 =  method : Package_0.ClassId_0.m_0() : var0 
var18 =  prim : int:1 : 
var19 =  method : Package_0.ClassId_0.k_0(int) : var0 var18 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var17 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var18 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var19 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=1 [var17]  : true
<randoop.PrimValue, value=1 [var19]  : true

allSequences.size()=110
-------------------------------------------
randoop.util.Randomness: total calls to random: 572
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 109 sequences.
components: 109
randoop.util.Randomness: total calls to random: 573
randoop.util.Randomness: total calls to random: 574
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 575
randoop.util.Randomness: total calls to random: 576
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:1 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=111
-------------------------------------------
randoop.util.Randomness: total calls to random: 577
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 110 sequences.
components: 110
randoop.util.Randomness: total calls to random: 578
randoop.util.Randomness: total calls to random: 579
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 580
randoop.util.Randomness: total calls to random: 581
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:10 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=112
-------------------------------------------
randoop.util.Randomness: total calls to random: 582
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 111 sequences.
components: 111
randoop.util.Randomness: total calls to random: 583
randoop.util.Randomness: total calls to random: 584
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:1 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=113
-------------------------------------------
randoop.util.Randomness: total calls to random: 585
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 112 sequences.
components: 112
randoop.util.Randomness: total calls to random: 586
randoop.util.Randomness: total calls to random: 587
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 588
randoop.util.Randomness: total calls to random: 589
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:-1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:10 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=114
-------------------------------------------
randoop.util.Randomness: total calls to random: 590
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 113 sequences.
components: 113
randoop.util.Randomness: total calls to random: 591
randoop.util.Randomness: total calls to random: 592
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 593
randoop.util.Randomness: total calls to random: 594
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  prim : int:1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=115
-------------------------------------------
randoop.util.Randomness: total calls to random: 595
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 114 sequences.
components: 114
randoop.util.Randomness: total calls to random: 596
randoop.util.Randomness: total calls to random: 597
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 598
randoop.util.Randomness: total calls to random: 599
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  prim : int:100 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=116
-------------------------------------------
randoop.util.Randomness: total calls to random: 600
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 115 sequences.
components: 115
randoop.util.Randomness: total calls to random: 601
randoop.util.Randomness: total calls to random: 602
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 603
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 115 sequences.
components: 115
randoop.util.Randomness: total calls to random: 604
randoop.util.Randomness: total calls to random: 605
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 606
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 115 sequences.
components: 115
randoop.util.Randomness: total calls to random: 607
randoop.util.Randomness: total calls to random: 608
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=117
-------------------------------------------
randoop.util.Randomness: total calls to random: 609
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 116 sequences.
components: 116
randoop.util.Randomness: total calls to random: 610
randoop.util.Randomness: total calls to random: 611
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 612
randoop.util.Randomness: total calls to random: 613
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=118
-------------------------------------------
randoop.util.Randomness: total calls to random: 614
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 117 sequences.
components: 117
randoop.util.Randomness: total calls to random: 615
randoop.util.Randomness: total calls to random: 616
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 617
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 117 sequences.
components: 117
randoop.util.Randomness: total calls to random: 618
randoop.util.Randomness: total calls to random: 619
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 620
randoop.util.Randomness: total calls to random: 621
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=119
-------------------------------------------
randoop.util.Randomness: total calls to random: 622
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 118 sequences.
components: 118
randoop.util.Randomness: total calls to random: 623
randoop.util.Randomness: total calls to random: 624
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 625
randoop.util.Randomness: total calls to random: 626
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=120
-------------------------------------------
randoop.util.Randomness: total calls to random: 627
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 119 sequences.
components: 119
randoop.util.Randomness: total calls to random: 628
randoop.util.Randomness: total calls to random: 629
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 630
randoop.util.Randomness: total calls to random: 631
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  prim : int:1 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=121
-------------------------------------------
randoop.util.Randomness: total calls to random: 632
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 120 sequences.
components: 120
randoop.util.Randomness: total calls to random: 633
randoop.util.Randomness: total calls to random: 634
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 635
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 120 sequences.
components: 120
randoop.util.Randomness: total calls to random: 636
randoop.util.Randomness: total calls to random: 637
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 
var17 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var17 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=1 [var17]  : true

allSequences.size()=122
-------------------------------------------
randoop.util.Randomness: total calls to random: 638
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 121 sequences.
components: 121
randoop.util.Randomness: total calls to random: 639
randoop.util.Randomness: total calls to random: 640
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 641
randoop.util.Randomness: total calls to random: 642
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=123
-------------------------------------------
randoop.util.Randomness: total calls to random: 643
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 122 sequences.
components: 122
randoop.util.Randomness: total calls to random: 644
randoop.util.Randomness: total calls to random: 645
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 646
randoop.util.Randomness: total calls to random: 647
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=124
-------------------------------------------
randoop.util.Randomness: total calls to random: 648
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 123 sequences.
components: 123
randoop.util.Randomness: total calls to random: 649
randoop.util.Randomness: total calls to random: 650
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 651
randoop.util.Randomness: total calls to random: 652
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=125
-------------------------------------------
randoop.util.Randomness: total calls to random: 653
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 124 sequences.
components: 124
randoop.util.Randomness: total calls to random: 654
randoop.util.Randomness: total calls to random: 655
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=126
-------------------------------------------
randoop.util.Randomness: total calls to random: 656
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 125 sequences.
components: 125
randoop.util.Randomness: total calls to random: 657
randoop.util.Randomness: total calls to random: 658
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 659
randoop.util.Randomness: total calls to random: 660
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  method : Package_0.ClassId_0.m_0() : var0 
var16 =  prim : int:100 : 
var17 =  method : Package_0.ClassId_0.k_0(int) : var0 var16 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var16 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var17 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true
<randoop.PrimValue, value=1 [var17]  : true

allSequences.size()=127
-------------------------------------------
randoop.util.Randomness: total calls to random: 661
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 126 sequences.
components: 126
randoop.util.Randomness: total calls to random: 662
randoop.util.Randomness: total calls to random: 663
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 664
randoop.util.Randomness: total calls to random: 665
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 666
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 126 sequences.
components: 126
randoop.util.Randomness: total calls to random: 667
randoop.util.Randomness: total calls to random: 668
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 669
randoop.util.Randomness: total calls to random: 670
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  method : Package_0.ClassId_0.m_0() : var0 
var13 =  prim : int:-1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=128
-------------------------------------------
randoop.util.Randomness: total calls to random: 671
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 127 sequences.
components: 127
randoop.util.Randomness: total calls to random: 672
randoop.util.Randomness: total calls to random: 673
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 674
randoop.util.Randomness: total calls to random: 675
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 
var17 =  method : Package_0.ClassId_0.m_0() : var0 
var18 =  prim : int:100 : 
var19 =  method : Package_0.ClassId_0.k_0(int) : var0 var18 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var17 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var18 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var19 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=1 [var17]  : true
<randoop.PrimValue, value=1 [var19]  : true

allSequences.size()=129
-------------------------------------------
randoop.util.Randomness: total calls to random: 676
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 128 sequences.
components: 128
randoop.util.Randomness: total calls to random: 677
randoop.util.Randomness: total calls to random: 678
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 679
randoop.util.Randomness: total calls to random: 680
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=130
-------------------------------------------
randoop.util.Randomness: total calls to random: 681
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 129 sequences.
components: 129
randoop.util.Randomness: total calls to random: 682
randoop.util.Randomness: total calls to random: 683
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 684
randoop.util.Randomness: total calls to random: 685
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=131
-------------------------------------------
randoop.util.Randomness: total calls to random: 686
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 130 sequences.
components: 130
randoop.util.Randomness: total calls to random: 687
randoop.util.Randomness: total calls to random: 688
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 689
randoop.util.Randomness: total calls to random: 690
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=132
-------------------------------------------
randoop.util.Randomness: total calls to random: 691
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 131 sequences.
components: 131
randoop.util.Randomness: total calls to random: 692
randoop.util.Randomness: total calls to random: 693
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  prim : int:10 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=133
-------------------------------------------
randoop.util.Randomness: total calls to random: 694
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 132 sequences.
components: 132
randoop.util.Randomness: total calls to random: 695
randoop.util.Randomness: total calls to random: 696
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 697
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 132 sequences.
components: 132
randoop.util.Randomness: total calls to random: 698
randoop.util.Randomness: total calls to random: 699
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 700
randoop.util.Randomness: total calls to random: 701
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true

allSequences.size()=134
-------------------------------------------
randoop.util.Randomness: total calls to random: 702
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 133 sequences.
components: 133
randoop.util.Randomness: total calls to random: 703
randoop.util.Randomness: total calls to random: 704
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 705
randoop.util.Randomness: total calls to random: 706
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 707
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 133 sequences.
components: 133
randoop.util.Randomness: total calls to random: 708
randoop.util.Randomness: total calls to random: 709
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=135
-------------------------------------------
randoop.util.Randomness: total calls to random: 710
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 134 sequences.
components: 134
randoop.util.Randomness: total calls to random: 711
randoop.util.Randomness: total calls to random: 712
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=136
-------------------------------------------
randoop.util.Randomness: total calls to random: 713
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 135 sequences.
components: 135
randoop.util.Randomness: total calls to random: 714
randoop.util.Randomness: total calls to random: 715
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 716
randoop.util.Randomness: total calls to random: 717
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:10 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:100 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=137
-------------------------------------------
randoop.util.Randomness: total calls to random: 718
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 136 sequences.
components: 136
randoop.util.Randomness: total calls to random: 719
randoop.util.Randomness: total calls to random: 720
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 721
randoop.util.Randomness: total calls to random: 722
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  prim : int:10 : 
var13 =  method : Package_0.ClassId_0.k_0(int) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var12 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var13 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=138
-------------------------------------------
randoop.util.Randomness: total calls to random: 723
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 137 sequences.
components: 137
randoop.util.Randomness: total calls to random: 724
randoop.util.Randomness: total calls to random: 725
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  method : Package_0.ClassId_0.m_0() : var0 
var16 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var16 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=139
-------------------------------------------
randoop.util.Randomness: total calls to random: 726
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 138 sequences.
components: 138
randoop.util.Randomness: total calls to random: 727
randoop.util.Randomness: total calls to random: 728
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 729
randoop.util.Randomness: total calls to random: 730
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_0.m_0() : var0 
var3 =  prim : int:100 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true

allSequences.size()=140
-------------------------------------------
randoop.util.Randomness: total calls to random: 731
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 139 sequences.
components: 139
randoop.util.Randomness: total calls to random: 732
randoop.util.Randomness: total calls to random: 733
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 734
randoop.util.Randomness: total calls to random: 735
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:0 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  prim : int:10 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=141
-------------------------------------------
randoop.util.Randomness: total calls to random: 736
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 140 sequences.
components: 140
randoop.util.Randomness: total calls to random: 737
randoop.util.Randomness: total calls to random: 738
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 739
randoop.util.Randomness: total calls to random: 740
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true

allSequences.size()=142
-------------------------------------------
randoop.util.Randomness: total calls to random: 741
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 141 sequences.
components: 141
randoop.util.Randomness: total calls to random: 742
randoop.util.Randomness: total calls to random: 743
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=143
-------------------------------------------
randoop.util.Randomness: total calls to random: 744
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 142 sequences.
components: 142
randoop.util.Randomness: total calls to random: 745
randoop.util.Randomness: total calls to random: 746
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 747
randoop.util.Randomness: total calls to random: 748
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:1 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=144
-------------------------------------------
randoop.util.Randomness: total calls to random: 749
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 143 sequences.
components: 143
randoop.util.Randomness: total calls to random: 750
randoop.util.Randomness: total calls to random: 751
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 752
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 143 sequences.
components: 143
randoop.util.Randomness: total calls to random: 753
randoop.util.Randomness: total calls to random: 754
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 755
randoop.util.Randomness: total calls to random: 756
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:100 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=145
-------------------------------------------
randoop.util.Randomness: total calls to random: 757
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 144 sequences.
components: 144
randoop.util.Randomness: total calls to random: 758
randoop.util.Randomness: total calls to random: 759
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  prim : int:1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=146
-------------------------------------------
randoop.util.Randomness: total calls to random: 760
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 145 sequences.
components: 145
randoop.util.Randomness: total calls to random: 761
randoop.util.Randomness: total calls to random: 762
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 763
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 145 sequences.
components: 145
randoop.util.Randomness: total calls to random: 764
randoop.util.Randomness: total calls to random: 765
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:1 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:0 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=147
-------------------------------------------
randoop.util.Randomness: total calls to random: 766
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 146 sequences.
components: 146
randoop.util.Randomness: total calls to random: 767
randoop.util.Randomness: total calls to random: 768
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=148
-------------------------------------------
randoop.util.Randomness: total calls to random: 769
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 147 sequences.
components: 147
randoop.util.Randomness: total calls to random: 770
randoop.util.Randomness: total calls to random: 771
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=149
-------------------------------------------
randoop.util.Randomness: total calls to random: 772
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 148 sequences.
components: 148
randoop.util.Randomness: total calls to random: 773
randoop.util.Randomness: total calls to random: 774
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 775
randoop.util.Randomness: total calls to random: 776
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=150
-------------------------------------------
randoop.util.Randomness: total calls to random: 777
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 149 sequences.
components: 149
randoop.util.Randomness: total calls to random: 778
randoop.util.Randomness: total calls to random: 779
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 780
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 149 sequences.
components: 149
randoop.util.Randomness: total calls to random: 781
randoop.util.Randomness: total calls to random: 782
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 783
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 149 sequences.
components: 149
randoop.util.Randomness: total calls to random: 784
randoop.util.Randomness: total calls to random: 785
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 786
randoop.util.Randomness: total calls to random: 787
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=151
-------------------------------------------
randoop.util.Randomness: total calls to random: 788
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 150 sequences.
components: 150
randoop.util.Randomness: total calls to random: 789
randoop.util.Randomness: total calls to random: 790
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 791
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 150 sequences.
components: 150
randoop.util.Randomness: total calls to random: 792
randoop.util.Randomness: total calls to random: 793
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 794
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 150 sequences.
components: 150
randoop.util.Randomness: total calls to random: 795
randoop.util.Randomness: total calls to random: 796
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 
var17 =  prim : int:-1 : 
var18 =  method : Package_0.ClassId_0.k_0(int) : var0 var17 
var19 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var17 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var18 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var19 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=1 [var19]  : true

allSequences.size()=152
-------------------------------------------
randoop.util.Randomness: total calls to random: 797
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 151 sequences.
components: 151
randoop.util.Randomness: total calls to random: 798
randoop.util.Randomness: total calls to random: 799
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 800
randoop.util.Randomness: total calls to random: 801
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  prim : int:1 : 
var13 =  method : Package_0.ClassId_0.k_0(int) : var0 var12 
var14 =  prim : int:-1 : 
var15 =  method : Package_0.ClassId_0.k_0(int) : var0 var14 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var12 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var13 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var14 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var15 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var15]  : true

allSequences.size()=153
-------------------------------------------
randoop.util.Randomness: total calls to random: 802
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 152 sequences.
components: 152
randoop.util.Randomness: total calls to random: 803
randoop.util.Randomness: total calls to random: 804
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 805
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 152 sequences.
components: 152
randoop.util.Randomness: total calls to random: 806
randoop.util.Randomness: total calls to random: 807
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 808
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 152 sequences.
components: 152
randoop.util.Randomness: total calls to random: 809
randoop.util.Randomness: total calls to random: 810
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 811
randoop.util.Randomness: total calls to random: 812
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  method : Package_0.ClassId_0.m_0() : var0 
var13 =  prim : int:-1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  prim : int:10 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=154
-------------------------------------------
randoop.util.Randomness: total calls to random: 813
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 153 sequences.
components: 153
randoop.util.Randomness: total calls to random: 814
randoop.util.Randomness: total calls to random: 815
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 816
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 153 sequences.
components: 153
randoop.util.Randomness: total calls to random: 817
randoop.util.Randomness: total calls to random: 818
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 819
randoop.util.Randomness: total calls to random: 820
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:100 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=155
-------------------------------------------
randoop.util.Randomness: total calls to random: 821
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 154 sequences.
components: 154
randoop.util.Randomness: total calls to random: 822
randoop.util.Randomness: total calls to random: 823
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  prim : int:1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_0.m_0() : var0 
var12 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=156
-------------------------------------------
randoop.util.Randomness: total calls to random: 824
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 155 sequences.
components: 155
randoop.util.Randomness: total calls to random: 825
randoop.util.Randomness: total calls to random: 826
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=157
-------------------------------------------
randoop.util.Randomness: total calls to random: 827
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 156 sequences.
components: 156
randoop.util.Randomness: total calls to random: 828
randoop.util.Randomness: total calls to random: 829
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_0.m_0() : var0 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=158
-------------------------------------------
randoop.util.Randomness: total calls to random: 830
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 157 sequences.
components: 157
randoop.util.Randomness: total calls to random: 831
randoop.util.Randomness: total calls to random: 832
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=159
-------------------------------------------
randoop.util.Randomness: total calls to random: 833
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 158 sequences.
components: 158
randoop.util.Randomness: total calls to random: 834
randoop.util.Randomness: total calls to random: 835
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 836
randoop.util.Randomness: total calls to random: 837
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:-1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  prim : int:10 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=160
-------------------------------------------
randoop.util.Randomness: total calls to random: 838
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 159 sequences.
components: 159
randoop.util.Randomness: total calls to random: 839
randoop.util.Randomness: total calls to random: 840
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 841
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 159 sequences.
components: 159
randoop.util.Randomness: total calls to random: 842
randoop.util.Randomness: total calls to random: 843
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 844
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 159 sequences.
components: 159
randoop.util.Randomness: total calls to random: 845
randoop.util.Randomness: total calls to random: 846
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  prim : int:100 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=161
-------------------------------------------
randoop.util.Randomness: total calls to random: 847
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 160 sequences.
components: 160
randoop.util.Randomness: total calls to random: 848
randoop.util.Randomness: total calls to random: 849
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 850
randoop.util.Randomness: total calls to random: 851
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  prim : int:100 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=162
-------------------------------------------
randoop.util.Randomness: total calls to random: 852
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 161 sequences.
components: 161
randoop.util.Randomness: total calls to random: 853
randoop.util.Randomness: total calls to random: 854
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 855
randoop.util.Randomness: total calls to random: 856
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=163
-------------------------------------------
randoop.util.Randomness: total calls to random: 857
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 162 sequences.
components: 162
randoop.util.Randomness: total calls to random: 858
randoop.util.Randomness: total calls to random: 859
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 860
randoop.util.Randomness: total calls to random: 861
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 862
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 162 sequences.
components: 162
randoop.util.Randomness: total calls to random: 863
randoop.util.Randomness: total calls to random: 864
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=164
-------------------------------------------
randoop.util.Randomness: total calls to random: 865
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 163 sequences.
components: 163
randoop.util.Randomness: total calls to random: 866
randoop.util.Randomness: total calls to random: 867
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 868
randoop.util.Randomness: total calls to random: 869
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=165
-------------------------------------------
randoop.util.Randomness: total calls to random: 870
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 164 sequences.
components: 164
randoop.util.Randomness: total calls to random: 871
randoop.util.Randomness: total calls to random: 872
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 
var17 =  method : Package_0.ClassId_0.m_0() : var0 
var18 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var17 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var18 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=1 [var17]  : true
<randoop.PrimValue, value=1 [var18]  : true

allSequences.size()=166
-------------------------------------------
randoop.util.Randomness: total calls to random: 873
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 165 sequences.
components: 165
randoop.util.Randomness: total calls to random: 874
randoop.util.Randomness: total calls to random: 875
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  prim : int:1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_0.m_0() : var0 
var12 =  method : Package_0.ClassId_0.m_0() : var0 
var13 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=167
-------------------------------------------
randoop.util.Randomness: total calls to random: 876
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 166 sequences.
components: 166
randoop.util.Randomness: total calls to random: 877
randoop.util.Randomness: total calls to random: 878
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 879
randoop.util.Randomness: total calls to random: 880
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:-1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:10 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=168
-------------------------------------------
randoop.util.Randomness: total calls to random: 881
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 167 sequences.
components: 167
randoop.util.Randomness: total calls to random: 882
randoop.util.Randomness: total calls to random: 883
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 884
randoop.util.Randomness: total calls to random: 885
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  prim : int:10 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=169
-------------------------------------------
randoop.util.Randomness: total calls to random: 886
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 168 sequences.
components: 168
randoop.util.Randomness: total calls to random: 887
randoop.util.Randomness: total calls to random: 888
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 889
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 168 sequences.
components: 168
randoop.util.Randomness: total calls to random: 890
randoop.util.Randomness: total calls to random: 891
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:1 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:0 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=170
-------------------------------------------
randoop.util.Randomness: total calls to random: 892
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 169 sequences.
components: 169
randoop.util.Randomness: total calls to random: 893
randoop.util.Randomness: total calls to random: 894
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 895
randoop.util.Randomness: total calls to random: 896
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  method : Package_0.ClassId_0.m_0() : var0 
var14 =  method : Package_0.ClassId_0.m_0() : var0 
var15 =  prim : int:0 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=171
-------------------------------------------
randoop.util.Randomness: total calls to random: 897
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 170 sequences.
components: 170
randoop.util.Randomness: total calls to random: 898
randoop.util.Randomness: total calls to random: 899
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  method : Package_0.ClassId_0.m_0() : var0 
var12 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=172
-------------------------------------------
randoop.util.Randomness: total calls to random: 900
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 171 sequences.
components: 171
randoop.util.Randomness: total calls to random: 901
randoop.util.Randomness: total calls to random: 902
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 903
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 171 sequences.
components: 171
randoop.util.Randomness: total calls to random: 904
randoop.util.Randomness: total calls to random: 905
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 906
randoop.util.Randomness: total calls to random: 907
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  prim : int:1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  prim : int:-1 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=173
-------------------------------------------
randoop.util.Randomness: total calls to random: 908
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 172 sequences.
components: 172
randoop.util.Randomness: total calls to random: 909
randoop.util.Randomness: total calls to random: 910
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 911
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 172 sequences.
components: 172
randoop.util.Randomness: total calls to random: 912
randoop.util.Randomness: total calls to random: 913
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 914
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 172 sequences.
components: 172
randoop.util.Randomness: total calls to random: 915
randoop.util.Randomness: total calls to random: 916
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 917
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 172 sequences.
components: 172
randoop.util.Randomness: total calls to random: 918
randoop.util.Randomness: total calls to random: 919
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 920
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 172 sequences.
components: 172
randoop.util.Randomness: total calls to random: 921
randoop.util.Randomness: total calls to random: 922
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 923
randoop.util.Randomness: total calls to random: 924
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:0 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=174
-------------------------------------------
randoop.util.Randomness: total calls to random: 925
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 173 sequences.
components: 173
randoop.util.Randomness: total calls to random: 926
randoop.util.Randomness: total calls to random: 927
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 928
randoop.util.Randomness: total calls to random: 929
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:100 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  prim : int:100 : 
var13 =  method : Package_0.ClassId_0.k_0(int) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var12 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var13 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=175
-------------------------------------------
randoop.util.Randomness: total calls to random: 930
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 174 sequences.
components: 174
randoop.util.Randomness: total calls to random: 931
randoop.util.Randomness: total calls to random: 932
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=176
-------------------------------------------
randoop.util.Randomness: total calls to random: 933
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 175 sequences.
components: 175
randoop.util.Randomness: total calls to random: 934
randoop.util.Randomness: total calls to random: 935
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 936
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 175 sequences.
components: 175
randoop.util.Randomness: total calls to random: 937
randoop.util.Randomness: total calls to random: 938
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 939
randoop.util.Randomness: total calls to random: 940
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:10 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:-1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  prim : int:1 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=177
-------------------------------------------
randoop.util.Randomness: total calls to random: 941
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 176 sequences.
components: 176
randoop.util.Randomness: total calls to random: 942
randoop.util.Randomness: total calls to random: 943
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 944
randoop.util.Randomness: total calls to random: 945
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=178
-------------------------------------------
randoop.util.Randomness: total calls to random: 946
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 177 sequences.
components: 177
randoop.util.Randomness: total calls to random: 947
randoop.util.Randomness: total calls to random: 948
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 949
randoop.util.Randomness: total calls to random: 950
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:0 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:0 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=179
-------------------------------------------
randoop.util.Randomness: total calls to random: 951
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 178 sequences.
components: 178
randoop.util.Randomness: total calls to random: 952
randoop.util.Randomness: total calls to random: 953
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 954
randoop.util.Randomness: total calls to random: 955
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  prim : int:-1 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=180
-------------------------------------------
randoop.util.Randomness: total calls to random: 956
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 179 sequences.
components: 179
randoop.util.Randomness: total calls to random: 957
randoop.util.Randomness: total calls to random: 958
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 
var17 =  prim : int:-1 : 
var18 =  method : Package_0.ClassId_0.k_0(int) : var0 var17 
var19 =  method : Package_0.ClassId_0.m_0() : var0 
var20 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var17 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var18 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var19 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var20 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=1 [var19]  : true
<randoop.PrimValue, value=1 [var20]  : true

allSequences.size()=181
-------------------------------------------
randoop.util.Randomness: total calls to random: 959
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 180 sequences.
components: 180
randoop.util.Randomness: total calls to random: 960
randoop.util.Randomness: total calls to random: 961
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 962
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 180 sequences.
components: 180
randoop.util.Randomness: total calls to random: 963
randoop.util.Randomness: total calls to random: 964
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_0.m_0() : var0 
var12 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=182
-------------------------------------------
randoop.util.Randomness: total calls to random: 965
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 181 sequences.
components: 181
randoop.util.Randomness: total calls to random: 966
randoop.util.Randomness: total calls to random: 967
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 968
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 181 sequences.
components: 181
randoop.util.Randomness: total calls to random: 969
randoop.util.Randomness: total calls to random: 970
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 
var17 =  method : Package_0.ClassId_0.m_0() : var0 
var18 =  prim : int:100 : 
var19 =  method : Package_0.ClassId_0.k_0(int) : var0 var18 
var20 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var17 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var18 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var19 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var20 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=1 [var17]  : true
<randoop.PrimValue, value=1 [var19]  : true
<randoop.PrimValue, value=1 [var20]  : true

allSequences.size()=183
-------------------------------------------
randoop.util.Randomness: total calls to random: 971
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 182 sequences.
components: 182
randoop.util.Randomness: total calls to random: 972
randoop.util.Randomness: total calls to random: 973
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 974
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 182 sequences.
components: 182
randoop.util.Randomness: total calls to random: 975
randoop.util.Randomness: total calls to random: 976
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 977
randoop.util.Randomness: total calls to random: 978
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=184
-------------------------------------------
randoop.util.Randomness: total calls to random: 979
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 183 sequences.
components: 183
randoop.util.Randomness: total calls to random: 980
randoop.util.Randomness: total calls to random: 981
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 982
randoop.util.Randomness: total calls to random: 983
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=185
-------------------------------------------
randoop.util.Randomness: total calls to random: 984
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 184 sequences.
components: 184
randoop.util.Randomness: total calls to random: 985
randoop.util.Randomness: total calls to random: 986
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  method : Package_0.ClassId_0.m_0() : var0 
var13 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=186
-------------------------------------------
randoop.util.Randomness: total calls to random: 987
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 185 sequences.
components: 185
randoop.util.Randomness: total calls to random: 988
randoop.util.Randomness: total calls to random: 989
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 990
randoop.util.Randomness: total calls to random: 991
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 992
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 185 sequences.
components: 185
randoop.util.Randomness: total calls to random: 993
randoop.util.Randomness: total calls to random: 994
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 995
randoop.util.Randomness: total calls to random: 996
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:-1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  prim : int:10 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  prim : int:0 : 
var13 =  method : Package_0.ClassId_0.k_0(int) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var12 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var13 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=187
-------------------------------------------
randoop.util.Randomness: total calls to random: 997
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 186 sequences.
components: 186
randoop.util.Randomness: total calls to random: 998
randoop.util.Randomness: total calls to random: 999
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=188
-------------------------------------------
randoop.util.Randomness: total calls to random: 1000
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 187 sequences.
components: 187
randoop.util.Randomness: total calls to random: 1001
randoop.util.Randomness: total calls to random: 1002
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1003
randoop.util.Randomness: total calls to random: 1004
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  prim : int:1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=189
-------------------------------------------
randoop.util.Randomness: total calls to random: 1005
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 188 sequences.
components: 188
randoop.util.Randomness: total calls to random: 1006
randoop.util.Randomness: total calls to random: 1007
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1008
randoop.util.Randomness: total calls to random: 1009
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:0 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true

allSequences.size()=190
-------------------------------------------
randoop.util.Randomness: total calls to random: 1010
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 189 sequences.
components: 189
randoop.util.Randomness: total calls to random: 1011
randoop.util.Randomness: total calls to random: 1012
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=191
-------------------------------------------
randoop.util.Randomness: total calls to random: 1013
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 190 sequences.
components: 190
randoop.util.Randomness: total calls to random: 1014
randoop.util.Randomness: total calls to random: 1015
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1016
randoop.util.Randomness: total calls to random: 1017
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  prim : int:0 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=192
-------------------------------------------
randoop.util.Randomness: total calls to random: 1018
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 191 sequences.
components: 191
randoop.util.Randomness: total calls to random: 1019
randoop.util.Randomness: total calls to random: 1020
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1021
randoop.util.Randomness: total calls to random: 1022
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  prim : int:100 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=193
-------------------------------------------
randoop.util.Randomness: total calls to random: 1023
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 192 sequences.
components: 192
randoop.util.Randomness: total calls to random: 1024
randoop.util.Randomness: total calls to random: 1025
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1026
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 192 sequences.
components: 192
randoop.util.Randomness: total calls to random: 1027
randoop.util.Randomness: total calls to random: 1028
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1029
randoop.util.Randomness: total calls to random: 1030
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1031
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 192 sequences.
components: 192
randoop.util.Randomness: total calls to random: 1032
randoop.util.Randomness: total calls to random: 1033
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1034
randoop.util.Randomness: total calls to random: 1035
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:10 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:-1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:-1 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=194
-------------------------------------------
randoop.util.Randomness: total calls to random: 1036
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 193 sequences.
components: 193
randoop.util.Randomness: total calls to random: 1037
randoop.util.Randomness: total calls to random: 1038
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1039
randoop.util.Randomness: total calls to random: 1040
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=195
-------------------------------------------
randoop.util.Randomness: total calls to random: 1041
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 194 sequences.
components: 194
randoop.util.Randomness: total calls to random: 1042
randoop.util.Randomness: total calls to random: 1043
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1044
randoop.util.Randomness: total calls to random: 1045
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:1 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=196
-------------------------------------------
randoop.util.Randomness: total calls to random: 1046
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 195 sequences.
components: 195
randoop.util.Randomness: total calls to random: 1047
randoop.util.Randomness: total calls to random: 1048
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1049
randoop.util.Randomness: total calls to random: 1050
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=197
-------------------------------------------
randoop.util.Randomness: total calls to random: 1051
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 196 sequences.
components: 196
randoop.util.Randomness: total calls to random: 1052
randoop.util.Randomness: total calls to random: 1053
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1054
randoop.util.Randomness: total calls to random: 1055
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1056
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 196 sequences.
components: 196
randoop.util.Randomness: total calls to random: 1057
randoop.util.Randomness: total calls to random: 1058
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1059
randoop.util.Randomness: total calls to random: 1060
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:1 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:0 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:0 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=198
-------------------------------------------
randoop.util.Randomness: total calls to random: 1061
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 197 sequences.
components: 197
randoop.util.Randomness: total calls to random: 1062
randoop.util.Randomness: total calls to random: 1063
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1064
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 197 sequences.
components: 197
randoop.util.Randomness: total calls to random: 1065
randoop.util.Randomness: total calls to random: 1066
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1067
randoop.util.Randomness: total calls to random: 1068
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_0.m_0() : var0 
var12 =  method : Package_0.ClassId_0.m_0() : var0 
var13 =  prim : int:10 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=199
-------------------------------------------
randoop.util.Randomness: total calls to random: 1069
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 198 sequences.
components: 198
randoop.util.Randomness: total calls to random: 1070
randoop.util.Randomness: total calls to random: 1071
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1072
randoop.util.Randomness: total calls to random: 1073
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:100 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=200
-------------------------------------------
randoop.util.Randomness: total calls to random: 1074
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 199 sequences.
components: 199
randoop.util.Randomness: total calls to random: 1075
randoop.util.Randomness: total calls to random: 1076
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1077
randoop.util.Randomness: total calls to random: 1078
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 
var9 =  prim : int:0 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=201
-------------------------------------------
randoop.util.Randomness: total calls to random: 1079
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 200 sequences.
components: 200
randoop.util.Randomness: total calls to random: 1080
randoop.util.Randomness: total calls to random: 1081
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1082
randoop.util.Randomness: total calls to random: 1083
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=202
-------------------------------------------
randoop.util.Randomness: total calls to random: 1084
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 201 sequences.
components: 201
randoop.util.Randomness: total calls to random: 1085
randoop.util.Randomness: total calls to random: 1086
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1087
randoop.util.Randomness: total calls to random: 1088
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:1 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=203
-------------------------------------------
randoop.util.Randomness: total calls to random: 1089
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 202 sequences.
components: 202
randoop.util.Randomness: total calls to random: 1090
randoop.util.Randomness: total calls to random: 1091
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1092
randoop.util.Randomness: total calls to random: 1093
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1094
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 202 sequences.
components: 202
randoop.util.Randomness: total calls to random: 1095
randoop.util.Randomness: total calls to random: 1096
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  prim : int:1 : 
var13 =  method : Package_0.ClassId_0.k_0(int) : var0 var12 
var14 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var12 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var13 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=204
-------------------------------------------
randoop.util.Randomness: total calls to random: 1097
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 203 sequences.
components: 203
randoop.util.Randomness: total calls to random: 1098
randoop.util.Randomness: total calls to random: 1099
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1100
randoop.util.Randomness: total calls to random: 1101
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1102
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 203 sequences.
components: 203
randoop.util.Randomness: total calls to random: 1103
randoop.util.Randomness: total calls to random: 1104
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=205
-------------------------------------------
randoop.util.Randomness: total calls to random: 1105
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 204 sequences.
components: 204
randoop.util.Randomness: total calls to random: 1106
randoop.util.Randomness: total calls to random: 1107
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1108
randoop.util.Randomness: total calls to random: 1109
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  prim : int:0 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  prim : int:1 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=206
-------------------------------------------
randoop.util.Randomness: total calls to random: 1110
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 205 sequences.
components: 205
randoop.util.Randomness: total calls to random: 1111
randoop.util.Randomness: total calls to random: 1112
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1113
randoop.util.Randomness: total calls to random: 1114
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:-1 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=207
-------------------------------------------
randoop.util.Randomness: total calls to random: 1115
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 206 sequences.
components: 206
randoop.util.Randomness: total calls to random: 1116
randoop.util.Randomness: total calls to random: 1117
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1118
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 206 sequences.
components: 206
randoop.util.Randomness: total calls to random: 1119
randoop.util.Randomness: total calls to random: 1120
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1121
randoop.util.Randomness: total calls to random: 1122
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:100 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  prim : int:0 : 
var13 =  method : Package_0.ClassId_0.k_0(int) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var12 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var13 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=208
-------------------------------------------
randoop.util.Randomness: total calls to random: 1123
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 207 sequences.
components: 207
randoop.util.Randomness: total calls to random: 1124
randoop.util.Randomness: total calls to random: 1125
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  prim : int:100 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=209
-------------------------------------------
randoop.util.Randomness: total calls to random: 1126
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 208 sequences.
components: 208
randoop.util.Randomness: total calls to random: 1127
randoop.util.Randomness: total calls to random: 1128
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1129
randoop.util.Randomness: total calls to random: 1130
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  prim : int:100 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  prim : int:1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=210
-------------------------------------------
randoop.util.Randomness: total calls to random: 1131
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 209 sequences.
components: 209
randoop.util.Randomness: total calls to random: 1132
randoop.util.Randomness: total calls to random: 1133
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:10 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 
var9 =  prim : int:1 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=211
-------------------------------------------
randoop.util.Randomness: total calls to random: 1134
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 210 sequences.
components: 210
randoop.util.Randomness: total calls to random: 1135
randoop.util.Randomness: total calls to random: 1136
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=212
-------------------------------------------
randoop.util.Randomness: total calls to random: 1137
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 211 sequences.
components: 211
randoop.util.Randomness: total calls to random: 1138
randoop.util.Randomness: total calls to random: 1139
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1140
randoop.util.Randomness: total calls to random: 1141
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:0 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:100 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=213
-------------------------------------------
randoop.util.Randomness: total calls to random: 1142
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 212 sequences.
components: 212
randoop.util.Randomness: total calls to random: 1143
randoop.util.Randomness: total calls to random: 1144
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1145
randoop.util.Randomness: total calls to random: 1146
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:1 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=214
-------------------------------------------
randoop.util.Randomness: total calls to random: 1147
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 213 sequences.
components: 213
randoop.util.Randomness: total calls to random: 1148
randoop.util.Randomness: total calls to random: 1149
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  prim : int:1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=215
-------------------------------------------
randoop.util.Randomness: total calls to random: 1150
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 214 sequences.
components: 214
randoop.util.Randomness: total calls to random: 1151
randoop.util.Randomness: total calls to random: 1152
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1153
randoop.util.Randomness: total calls to random: 1154
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 
var9 =  prim : int:0 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=216
-------------------------------------------
randoop.util.Randomness: total calls to random: 1155
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 215 sequences.
components: 215
randoop.util.Randomness: total calls to random: 1156
randoop.util.Randomness: total calls to random: 1157
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true

allSequences.size()=217
-------------------------------------------
randoop.util.Randomness: total calls to random: 1158
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 216 sequences.
components: 216
randoop.util.Randomness: total calls to random: 1159
randoop.util.Randomness: total calls to random: 1160
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 
var9 =  prim : int:-1 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=218
-------------------------------------------
randoop.util.Randomness: total calls to random: 1161
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 217 sequences.
components: 217
randoop.util.Randomness: total calls to random: 1162
randoop.util.Randomness: total calls to random: 1163
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1164
randoop.util.Randomness: total calls to random: 1165
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1166
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 217 sequences.
components: 217
randoop.util.Randomness: total calls to random: 1167
randoop.util.Randomness: total calls to random: 1168
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1169
randoop.util.Randomness: total calls to random: 1170
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=219
-------------------------------------------
randoop.util.Randomness: total calls to random: 1171
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 218 sequences.
components: 218
randoop.util.Randomness: total calls to random: 1172
randoop.util.Randomness: total calls to random: 1173
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=220
-------------------------------------------
randoop.util.Randomness: total calls to random: 1174
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 219 sequences.
components: 219
randoop.util.Randomness: total calls to random: 1175
randoop.util.Randomness: total calls to random: 1176
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  prim : int:100 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=221
-------------------------------------------
randoop.util.Randomness: total calls to random: 1177
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 220 sequences.
components: 220
randoop.util.Randomness: total calls to random: 1178
randoop.util.Randomness: total calls to random: 1179
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1180
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 220 sequences.
components: 220
randoop.util.Randomness: total calls to random: 1181
randoop.util.Randomness: total calls to random: 1182
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1183
randoop.util.Randomness: total calls to random: 1184
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=222
-------------------------------------------
randoop.util.Randomness: total calls to random: 1185
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 221 sequences.
components: 221
randoop.util.Randomness: total calls to random: 1186
randoop.util.Randomness: total calls to random: 1187
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1188
randoop.util.Randomness: total calls to random: 1189
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1190
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 221 sequences.
components: 221
randoop.util.Randomness: total calls to random: 1191
randoop.util.Randomness: total calls to random: 1192
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1193
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 221 sequences.
components: 221
randoop.util.Randomness: total calls to random: 1194
randoop.util.Randomness: total calls to random: 1195
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  prim : int:10 : 
var13 =  method : Package_0.ClassId_0.k_0(int) : var0 var12 
var14 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var12 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var13 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=223
-------------------------------------------
randoop.util.Randomness: total calls to random: 1196
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 222 sequences.
components: 222
randoop.util.Randomness: total calls to random: 1197
randoop.util.Randomness: total calls to random: 1198
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1199
randoop.util.Randomness: total calls to random: 1200
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=224
-------------------------------------------
randoop.util.Randomness: total calls to random: 1201
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 223 sequences.
components: 223
randoop.util.Randomness: total calls to random: 1202
randoop.util.Randomness: total calls to random: 1203
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1204
randoop.util.Randomness: total calls to random: 1205
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=225
-------------------------------------------
randoop.util.Randomness: total calls to random: 1206
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 224 sequences.
components: 224
randoop.util.Randomness: total calls to random: 1207
randoop.util.Randomness: total calls to random: 1208
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1209
randoop.util.Randomness: total calls to random: 1210
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:1 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=226
-------------------------------------------
randoop.util.Randomness: total calls to random: 1211
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 225 sequences.
components: 225
randoop.util.Randomness: total calls to random: 1212
randoop.util.Randomness: total calls to random: 1213
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1214
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 225 sequences.
components: 225
randoop.util.Randomness: total calls to random: 1215
randoop.util.Randomness: total calls to random: 1216
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1217
randoop.util.Randomness: total calls to random: 1218
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 
var9 =  prim : int:0 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=227
-------------------------------------------
randoop.util.Randomness: total calls to random: 1219
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 226 sequences.
components: 226
randoop.util.Randomness: total calls to random: 1220
randoop.util.Randomness: total calls to random: 1221
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 
var17 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var17 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=1 [var17]  : true

allSequences.size()=228
-------------------------------------------
randoop.util.Randomness: total calls to random: 1222
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 227 sequences.
components: 227
randoop.util.Randomness: total calls to random: 1223
randoop.util.Randomness: total calls to random: 1224
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1225
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 227 sequences.
components: 227
randoop.util.Randomness: total calls to random: 1226
randoop.util.Randomness: total calls to random: 1227
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 
var9 =  prim : int:0 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=229
-------------------------------------------
randoop.util.Randomness: total calls to random: 1228
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 228 sequences.
components: 228
randoop.util.Randomness: total calls to random: 1229
randoop.util.Randomness: total calls to random: 1230
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:10 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 
var9 =  prim : int:1 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  method : Package_0.ClassId_0.m_0() : var0 
var12 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=230
-------------------------------------------
randoop.util.Randomness: total calls to random: 1231
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 229 sequences.
components: 229
randoop.util.Randomness: total calls to random: 1232
randoop.util.Randomness: total calls to random: 1233
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:1 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=231
-------------------------------------------
randoop.util.Randomness: total calls to random: 1234
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 230 sequences.
components: 230
randoop.util.Randomness: total calls to random: 1235
randoop.util.Randomness: total calls to random: 1236
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1237
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 230 sequences.
components: 230
randoop.util.Randomness: total calls to random: 1238
randoop.util.Randomness: total calls to random: 1239
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1240
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 230 sequences.
components: 230
randoop.util.Randomness: total calls to random: 1241
randoop.util.Randomness: total calls to random: 1242
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1243
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 230 sequences.
components: 230
randoop.util.Randomness: total calls to random: 1244
randoop.util.Randomness: total calls to random: 1245
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1246
randoop.util.Randomness: total calls to random: 1247
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:100 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=232
-------------------------------------------
randoop.util.Randomness: total calls to random: 1248
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 231 sequences.
components: 231
randoop.util.Randomness: total calls to random: 1249
randoop.util.Randomness: total calls to random: 1250
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1251
randoop.util.Randomness: total calls to random: 1252
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:10 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 
var9 =  prim : int:1 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  method : Package_0.ClassId_0.m_0() : var0 
var12 =  prim : int:100 : 
var13 =  method : Package_0.ClassId_0.k_0(int) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var12 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var13 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=233
-------------------------------------------
randoop.util.Randomness: total calls to random: 1253
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 232 sequences.
components: 232
randoop.util.Randomness: total calls to random: 1254
randoop.util.Randomness: total calls to random: 1255
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1256
randoop.util.Randomness: total calls to random: 1257
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:100 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  prim : int:0 : 
var13 =  method : Package_0.ClassId_0.k_0(int) : var0 var12 
var14 =  prim : int:10 : 
var15 =  method : Package_0.ClassId_0.k_0(int) : var0 var14 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var12 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var13 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var14 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var15 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var15]  : true

allSequences.size()=234
-------------------------------------------
randoop.util.Randomness: total calls to random: 1258
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 233 sequences.
components: 233
randoop.util.Randomness: total calls to random: 1259
randoop.util.Randomness: total calls to random: 1260
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1261
randoop.util.Randomness: total calls to random: 1262
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=235
-------------------------------------------
randoop.util.Randomness: total calls to random: 1263
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 234 sequences.
components: 234
randoop.util.Randomness: total calls to random: 1264
randoop.util.Randomness: total calls to random: 1265
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1266
randoop.util.Randomness: total calls to random: 1267
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:10 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:-1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  prim : int:100 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=236
-------------------------------------------
randoop.util.Randomness: total calls to random: 1268
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 235 sequences.
components: 235
randoop.util.Randomness: total calls to random: 1269
randoop.util.Randomness: total calls to random: 1270
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1271
randoop.util.Randomness: total calls to random: 1272
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:10 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=237
-------------------------------------------
randoop.util.Randomness: total calls to random: 1273
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 236 sequences.
components: 236
randoop.util.Randomness: total calls to random: 1274
randoop.util.Randomness: total calls to random: 1275
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=238
-------------------------------------------
randoop.util.Randomness: total calls to random: 1276
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 237 sequences.
components: 237
randoop.util.Randomness: total calls to random: 1277
randoop.util.Randomness: total calls to random: 1278
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1279
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 237 sequences.
components: 237
randoop.util.Randomness: total calls to random: 1280
randoop.util.Randomness: total calls to random: 1281
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1282
randoop.util.Randomness: total calls to random: 1283
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=239
-------------------------------------------
randoop.util.Randomness: total calls to random: 1284
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 238 sequences.
components: 238
randoop.util.Randomness: total calls to random: 1285
randoop.util.Randomness: total calls to random: 1286
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 
var17 =  method : Package_0.ClassId_0.m_0() : var0 
var18 =  prim : int:100 : 
var19 =  method : Package_0.ClassId_0.k_0(int) : var0 var18 
var20 =  method : Package_0.ClassId_0.m_0() : var0 
var21 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var17 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var18 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var19 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var20 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var21 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=1 [var17]  : true
<randoop.PrimValue, value=1 [var19]  : true
<randoop.PrimValue, value=1 [var20]  : true
<randoop.PrimValue, value=1 [var21]  : true

allSequences.size()=240
-------------------------------------------
randoop.util.Randomness: total calls to random: 1287
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 239 sequences.
components: 239
randoop.util.Randomness: total calls to random: 1288
randoop.util.Randomness: total calls to random: 1289
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=241
-------------------------------------------
randoop.util.Randomness: total calls to random: 1290
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 240 sequences.
components: 240
randoop.util.Randomness: total calls to random: 1291
randoop.util.Randomness: total calls to random: 1292
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1293
randoop.util.Randomness: total calls to random: 1294
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:1 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=242
-------------------------------------------
randoop.util.Randomness: total calls to random: 1295
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 241 sequences.
components: 241
randoop.util.Randomness: total calls to random: 1296
randoop.util.Randomness: total calls to random: 1297
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1298
randoop.util.Randomness: total calls to random: 1299
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:1 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:0 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:100 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=243
-------------------------------------------
randoop.util.Randomness: total calls to random: 1300
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 242 sequences.
components: 242
randoop.util.Randomness: total calls to random: 1301
randoop.util.Randomness: total calls to random: 1302
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1303
randoop.util.Randomness: total calls to random: 1304
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:100 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=244
-------------------------------------------
randoop.util.Randomness: total calls to random: 1305
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 243 sequences.
components: 243
randoop.util.Randomness: total calls to random: 1306
randoop.util.Randomness: total calls to random: 1307
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1308
randoop.util.Randomness: total calls to random: 1309
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1310
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 243 sequences.
components: 243
randoop.util.Randomness: total calls to random: 1311
randoop.util.Randomness: total calls to random: 1312
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1313
randoop.util.Randomness: total calls to random: 1314
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=245
-------------------------------------------
randoop.util.Randomness: total calls to random: 1315
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 244 sequences.
components: 244
randoop.util.Randomness: total calls to random: 1316
randoop.util.Randomness: total calls to random: 1317
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1318
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 244 sequences.
components: 244
randoop.util.Randomness: total calls to random: 1319
randoop.util.Randomness: total calls to random: 1320
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1321
randoop.util.Randomness: total calls to random: 1322
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  prim : int:100 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  prim : int:100 : 
var13 =  method : Package_0.ClassId_0.k_0(int) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var12 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var13 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=246
-------------------------------------------
randoop.util.Randomness: total calls to random: 1323
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 245 sequences.
components: 245
randoop.util.Randomness: total calls to random: 1324
randoop.util.Randomness: total calls to random: 1325
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1326
randoop.util.Randomness: total calls to random: 1327
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1328
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 245 sequences.
components: 245
randoop.util.Randomness: total calls to random: 1329
randoop.util.Randomness: total calls to random: 1330
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true

allSequences.size()=247
-------------------------------------------
randoop.util.Randomness: total calls to random: 1331
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 246 sequences.
components: 246
randoop.util.Randomness: total calls to random: 1332
randoop.util.Randomness: total calls to random: 1333
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  prim : int:1 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=248
-------------------------------------------
randoop.util.Randomness: total calls to random: 1334
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 247 sequences.
components: 247
randoop.util.Randomness: total calls to random: 1335
randoop.util.Randomness: total calls to random: 1336
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1337
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 247 sequences.
components: 247
randoop.util.Randomness: total calls to random: 1338
randoop.util.Randomness: total calls to random: 1339
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1340
randoop.util.Randomness: total calls to random: 1341
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  prim : int:10 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=249
-------------------------------------------
randoop.util.Randomness: total calls to random: 1342
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 248 sequences.
components: 248
randoop.util.Randomness: total calls to random: 1343
randoop.util.Randomness: total calls to random: 1344
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1345
randoop.util.Randomness: total calls to random: 1346
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=250
-------------------------------------------
randoop.util.Randomness: total calls to random: 1347
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 249 sequences.
components: 249
randoop.util.Randomness: total calls to random: 1348
randoop.util.Randomness: total calls to random: 1349
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1350
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 249 sequences.
components: 249
randoop.util.Randomness: total calls to random: 1351
randoop.util.Randomness: total calls to random: 1352
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1353
randoop.util.Randomness: total calls to random: 1354
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=251
-------------------------------------------
randoop.util.Randomness: total calls to random: 1355
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 250 sequences.
components: 250
randoop.util.Randomness: total calls to random: 1356
randoop.util.Randomness: total calls to random: 1357
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  prim : int:0 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=252
-------------------------------------------
randoop.util.Randomness: total calls to random: 1358
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 251 sequences.
components: 251
randoop.util.Randomness: total calls to random: 1359
randoop.util.Randomness: total calls to random: 1360
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=253
-------------------------------------------
randoop.util.Randomness: total calls to random: 1361
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 252 sequences.
components: 252
randoop.util.Randomness: total calls to random: 1362
randoop.util.Randomness: total calls to random: 1363
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1364
randoop.util.Randomness: total calls to random: 1365
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:100 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=254
-------------------------------------------
randoop.util.Randomness: total calls to random: 1366
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 253 sequences.
components: 253
randoop.util.Randomness: total calls to random: 1367
randoop.util.Randomness: total calls to random: 1368
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1369
randoop.util.Randomness: total calls to random: 1370
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:100 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  prim : int:0 : 
var13 =  method : Package_0.ClassId_0.k_0(int) : var0 var12 
var14 =  prim : int:0 : 
var15 =  method : Package_0.ClassId_0.k_0(int) : var0 var14 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var12 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var13 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var14 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var15 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var15]  : true

allSequences.size()=255
-------------------------------------------
randoop.util.Randomness: total calls to random: 1371
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 254 sequences.
components: 254
randoop.util.Randomness: total calls to random: 1372
randoop.util.Randomness: total calls to random: 1373
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  prim : int:0 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  prim : int:1 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=256
-------------------------------------------
randoop.util.Randomness: total calls to random: 1374
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 255 sequences.
components: 255
randoop.util.Randomness: total calls to random: 1375
randoop.util.Randomness: total calls to random: 1376
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1377
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 255 sequences.
components: 255
randoop.util.Randomness: total calls to random: 1378
randoop.util.Randomness: total calls to random: 1379
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=257
-------------------------------------------
randoop.util.Randomness: total calls to random: 1380
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 256 sequences.
components: 256
randoop.util.Randomness: total calls to random: 1381
randoop.util.Randomness: total calls to random: 1382
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1383
randoop.util.Randomness: total calls to random: 1384
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  prim : int:1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:10 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=258
-------------------------------------------
randoop.util.Randomness: total calls to random: 1385
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 257 sequences.
components: 257
randoop.util.Randomness: total calls to random: 1386
randoop.util.Randomness: total calls to random: 1387
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1388
randoop.util.Randomness: total calls to random: 1389
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_0.m_0() : var0 
var12 =  method : Package_0.ClassId_0.m_0() : var0 
var13 =  prim : int:0 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=259
-------------------------------------------
randoop.util.Randomness: total calls to random: 1390
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 258 sequences.
components: 258
randoop.util.Randomness: total calls to random: 1391
randoop.util.Randomness: total calls to random: 1392
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 
var17 =  method : Package_0.ClassId_0.m_0() : var0 
var18 =  prim : int:1 : 
var19 =  method : Package_0.ClassId_0.k_0(int) : var0 var18 
var20 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var17 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var18 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var19 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var20 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=1 [var17]  : true
<randoop.PrimValue, value=1 [var19]  : true
<randoop.PrimValue, value=1 [var20]  : true

allSequences.size()=260
-------------------------------------------
randoop.util.Randomness: total calls to random: 1393
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 259 sequences.
components: 259
randoop.util.Randomness: total calls to random: 1394
randoop.util.Randomness: total calls to random: 1395
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1396
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 259 sequences.
components: 259
randoop.util.Randomness: total calls to random: 1397
randoop.util.Randomness: total calls to random: 1398
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1399
randoop.util.Randomness: total calls to random: 1400
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:-1 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=261
-------------------------------------------
randoop.util.Randomness: total calls to random: 1401
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 260 sequences.
components: 260
randoop.util.Randomness: total calls to random: 1402
randoop.util.Randomness: total calls to random: 1403
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1404
randoop.util.Randomness: total calls to random: 1405
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:100 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=262
-------------------------------------------
randoop.util.Randomness: total calls to random: 1406
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 261 sequences.
components: 261
randoop.util.Randomness: total calls to random: 1407
randoop.util.Randomness: total calls to random: 1408
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1409
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 261 sequences.
components: 261
randoop.util.Randomness: total calls to random: 1410
randoop.util.Randomness: total calls to random: 1411
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1412
randoop.util.Randomness: total calls to random: 1413
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  prim : int:1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:1 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=263
-------------------------------------------
randoop.util.Randomness: total calls to random: 1414
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 262 sequences.
components: 262
randoop.util.Randomness: total calls to random: 1415
randoop.util.Randomness: total calls to random: 1416
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=264
-------------------------------------------
randoop.util.Randomness: total calls to random: 1417
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 263 sequences.
components: 263
randoop.util.Randomness: total calls to random: 1418
randoop.util.Randomness: total calls to random: 1419
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1420
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 263 sequences.
components: 263
randoop.util.Randomness: total calls to random: 1421
randoop.util.Randomness: total calls to random: 1422
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1423
randoop.util.Randomness: total calls to random: 1424
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=265
-------------------------------------------
randoop.util.Randomness: total calls to random: 1425
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 264 sequences.
components: 264
randoop.util.Randomness: total calls to random: 1426
randoop.util.Randomness: total calls to random: 1427
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1428
randoop.util.Randomness: total calls to random: 1429
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  prim : int:1 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=266
-------------------------------------------
randoop.util.Randomness: total calls to random: 1430
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 265 sequences.
components: 265
randoop.util.Randomness: total calls to random: 1431
randoop.util.Randomness: total calls to random: 1432
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:-1 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true

allSequences.size()=267
-------------------------------------------
randoop.util.Randomness: total calls to random: 1433
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 266 sequences.
components: 266
randoop.util.Randomness: total calls to random: 1434
randoop.util.Randomness: total calls to random: 1435
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1436
randoop.util.Randomness: total calls to random: 1437
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1438
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 266 sequences.
components: 266
randoop.util.Randomness: total calls to random: 1439
randoop.util.Randomness: total calls to random: 1440
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:10 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=268
-------------------------------------------
randoop.util.Randomness: total calls to random: 1441
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 267 sequences.
components: 267
randoop.util.Randomness: total calls to random: 1442
randoop.util.Randomness: total calls to random: 1443
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1444
randoop.util.Randomness: total calls to random: 1445
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  prim : int:1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:10 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=269
-------------------------------------------
randoop.util.Randomness: total calls to random: 1446
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 268 sequences.
components: 268
randoop.util.Randomness: total calls to random: 1447
randoop.util.Randomness: total calls to random: 1448
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1449
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 268 sequences.
components: 268
randoop.util.Randomness: total calls to random: 1450
randoop.util.Randomness: total calls to random: 1451
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1452
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 268 sequences.
components: 268
randoop.util.Randomness: total calls to random: 1453
randoop.util.Randomness: total calls to random: 1454
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1455
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 268 sequences.
components: 268
randoop.util.Randomness: total calls to random: 1456
randoop.util.Randomness: total calls to random: 1457
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  prim : int:0 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  prim : int:1 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  method : Package_0.ClassId_0.m_0() : var0 
var13 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=270
-------------------------------------------
randoop.util.Randomness: total calls to random: 1458
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 269 sequences.
components: 269
randoop.util.Randomness: total calls to random: 1459
randoop.util.Randomness: total calls to random: 1460
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1461
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 269 sequences.
components: 269
randoop.util.Randomness: total calls to random: 1462
randoop.util.Randomness: total calls to random: 1463
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1464
randoop.util.Randomness: total calls to random: 1465
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  prim : int:1 : 
var13 =  method : Package_0.ClassId_0.k_0(int) : var0 var12 
var14 =  prim : int:-1 : 
var15 =  method : Package_0.ClassId_0.k_0(int) : var0 var14 
var16 =  prim : int:0 : 
var17 =  method : Package_0.ClassId_0.k_0(int) : var0 var16 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var12 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var13 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var14 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var15 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var16 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var17 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var15]  : true
<randoop.PrimValue, value=1 [var17]  : true

allSequences.size()=271
-------------------------------------------
randoop.util.Randomness: total calls to random: 1466
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 270 sequences.
components: 270
randoop.util.Randomness: total calls to random: 1467
randoop.util.Randomness: total calls to random: 1468
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1469
randoop.util.Randomness: total calls to random: 1470
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:0 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  prim : int:-1 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=272
-------------------------------------------
randoop.util.Randomness: total calls to random: 1471
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 271 sequences.
components: 271
randoop.util.Randomness: total calls to random: 1472
randoop.util.Randomness: total calls to random: 1473
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1474
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 271 sequences.
components: 271
randoop.util.Randomness: total calls to random: 1475
randoop.util.Randomness: total calls to random: 1476
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:0 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:0 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=273
-------------------------------------------
randoop.util.Randomness: total calls to random: 1477
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 272 sequences.
components: 272
randoop.util.Randomness: total calls to random: 1478
randoop.util.Randomness: total calls to random: 1479
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:10 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=274
-------------------------------------------
randoop.util.Randomness: total calls to random: 1480
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 273 sequences.
components: 273
randoop.util.Randomness: total calls to random: 1481
randoop.util.Randomness: total calls to random: 1482
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_0.m_0() : var0 
var12 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=275
-------------------------------------------
randoop.util.Randomness: total calls to random: 1483
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 274 sequences.
components: 274
randoop.util.Randomness: total calls to random: 1484
randoop.util.Randomness: total calls to random: 1485
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1486
randoop.util.Randomness: total calls to random: 1487
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:100 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  prim : int:0 : 
var13 =  method : Package_0.ClassId_0.k_0(int) : var0 var12 
var14 =  prim : int:100 : 
var15 =  method : Package_0.ClassId_0.k_0(int) : var0 var14 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var12 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var13 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var14 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var15 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var15]  : true

allSequences.size()=276
-------------------------------------------
randoop.util.Randomness: total calls to random: 1488
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 275 sequences.
components: 275
randoop.util.Randomness: total calls to random: 1489
randoop.util.Randomness: total calls to random: 1490
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1491
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 275 sequences.
components: 275
randoop.util.Randomness: total calls to random: 1492
randoop.util.Randomness: total calls to random: 1493
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:0 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  prim : int:-1 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=277
-------------------------------------------
randoop.util.Randomness: total calls to random: 1494
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 276 sequences.
components: 276
randoop.util.Randomness: total calls to random: 1495
randoop.util.Randomness: total calls to random: 1496
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=278
-------------------------------------------
randoop.util.Randomness: total calls to random: 1497
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 277 sequences.
components: 277
randoop.util.Randomness: total calls to random: 1498
randoop.util.Randomness: total calls to random: 1499
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1500
randoop.util.Randomness: total calls to random: 1501
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:100 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=279
-------------------------------------------
randoop.util.Randomness: total calls to random: 1502
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 278 sequences.
components: 278
randoop.util.Randomness: total calls to random: 1503
randoop.util.Randomness: total calls to random: 1504
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1505
randoop.util.Randomness: total calls to random: 1506
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=280
-------------------------------------------
randoop.util.Randomness: total calls to random: 1507
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 279 sequences.
components: 279
randoop.util.Randomness: total calls to random: 1508
randoop.util.Randomness: total calls to random: 1509
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1510
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 279 sequences.
components: 279
randoop.util.Randomness: total calls to random: 1511
randoop.util.Randomness: total calls to random: 1512
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:1 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  method : Package_0.ClassId_0.m_0() : var0 
var12 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=281
-------------------------------------------
randoop.util.Randomness: total calls to random: 1513
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 280 sequences.
components: 280
randoop.util.Randomness: total calls to random: 1514
randoop.util.Randomness: total calls to random: 1515
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_0.m_0() : var0 
var12 =  method : Package_0.ClassId_0.m_0() : var0 
var13 =  prim : int:10 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true

allSequences.size()=282
-------------------------------------------
randoop.util.Randomness: total calls to random: 1516
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 281 sequences.
components: 281
randoop.util.Randomness: total calls to random: 1517
randoop.util.Randomness: total calls to random: 1518
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1519
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 281 sequences.
components: 281
randoop.util.Randomness: total calls to random: 1520
randoop.util.Randomness: total calls to random: 1521
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  method : Package_0.ClassId_0.m_0() : var0 
var13 =  method : Package_0.ClassId_0.m_0() : var0 
var14 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=283
-------------------------------------------
randoop.util.Randomness: total calls to random: 1522
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 282 sequences.
components: 282
randoop.util.Randomness: total calls to random: 1523
randoop.util.Randomness: total calls to random: 1524
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1525
randoop.util.Randomness: total calls to random: 1526
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:10 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=284
-------------------------------------------
randoop.util.Randomness: total calls to random: 1527
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 283 sequences.
components: 283
randoop.util.Randomness: total calls to random: 1528
randoop.util.Randomness: total calls to random: 1529
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  prim : int:100 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  prim : int:1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=285
-------------------------------------------
randoop.util.Randomness: total calls to random: 1530
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 284 sequences.
components: 284
randoop.util.Randomness: total calls to random: 1531
randoop.util.Randomness: total calls to random: 1532
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1533
randoop.util.Randomness: total calls to random: 1534
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:-1 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=286
-------------------------------------------
randoop.util.Randomness: total calls to random: 1535
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 285 sequences.
components: 285
randoop.util.Randomness: total calls to random: 1536
randoop.util.Randomness: total calls to random: 1537
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1538
randoop.util.Randomness: total calls to random: 1539
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:-1 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=287
-------------------------------------------
randoop.util.Randomness: total calls to random: 1540
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 286 sequences.
components: 286
randoop.util.Randomness: total calls to random: 1541
randoop.util.Randomness: total calls to random: 1542
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=288
-------------------------------------------
randoop.util.Randomness: total calls to random: 1543
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 287 sequences.
components: 287
randoop.util.Randomness: total calls to random: 1544
randoop.util.Randomness: total calls to random: 1545
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:100 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=289
-------------------------------------------
randoop.util.Randomness: total calls to random: 1546
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 288 sequences.
components: 288
randoop.util.Randomness: total calls to random: 1547
randoop.util.Randomness: total calls to random: 1548
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1549
randoop.util.Randomness: total calls to random: 1550
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1551
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 288 sequences.
components: 288
randoop.util.Randomness: total calls to random: 1552
randoop.util.Randomness: total calls to random: 1553
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1554
randoop.util.Randomness: total calls to random: 1555
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1556
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 288 sequences.
components: 288
randoop.util.Randomness: total calls to random: 1557
randoop.util.Randomness: total calls to random: 1558
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1559
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 288 sequences.
components: 288
randoop.util.Randomness: total calls to random: 1560
randoop.util.Randomness: total calls to random: 1561
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1562
randoop.util.Randomness: total calls to random: 1563
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1564
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 288 sequences.
components: 288
randoop.util.Randomness: total calls to random: 1565
randoop.util.Randomness: total calls to random: 1566
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1567
randoop.util.Randomness: total calls to random: 1568
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  method : Package_0.ClassId_0.m_0() : var0 
var13 =  method : Package_0.ClassId_0.m_0() : var0 
var14 =  method : Package_0.ClassId_0.m_0() : var0 
var15 =  prim : int:-1 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=290
-------------------------------------------
randoop.util.Randomness: total calls to random: 1569
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 289 sequences.
components: 289
randoop.util.Randomness: total calls to random: 1570
randoop.util.Randomness: total calls to random: 1571
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1572
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 289 sequences.
components: 289
randoop.util.Randomness: total calls to random: 1573
randoop.util.Randomness: total calls to random: 1574
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1575
randoop.util.Randomness: total calls to random: 1576
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1577
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 289 sequences.
components: 289
randoop.util.Randomness: total calls to random: 1578
randoop.util.Randomness: total calls to random: 1579
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=291
-------------------------------------------
randoop.util.Randomness: total calls to random: 1580
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 290 sequences.
components: 290
randoop.util.Randomness: total calls to random: 1581
randoop.util.Randomness: total calls to random: 1582
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:-1 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 
var17 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var17 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=1 [var17]  : true

allSequences.size()=292
-------------------------------------------
randoop.util.Randomness: total calls to random: 1583
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 291 sequences.
components: 291
randoop.util.Randomness: total calls to random: 1584
randoop.util.Randomness: total calls to random: 1585
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1586
randoop.util.Randomness: total calls to random: 1587
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:0 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=293
-------------------------------------------
randoop.util.Randomness: total calls to random: 1588
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 292 sequences.
components: 292
randoop.util.Randomness: total calls to random: 1589
randoop.util.Randomness: total calls to random: 1590
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:1 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=294
-------------------------------------------
randoop.util.Randomness: total calls to random: 1591
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 293 sequences.
components: 293
randoop.util.Randomness: total calls to random: 1592
randoop.util.Randomness: total calls to random: 1593
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1594
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 293 sequences.
components: 293
randoop.util.Randomness: total calls to random: 1595
randoop.util.Randomness: total calls to random: 1596
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1597
randoop.util.Randomness: total calls to random: 1598
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1599
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 293 sequences.
components: 293
randoop.util.Randomness: total calls to random: 1600
randoop.util.Randomness: total calls to random: 1601
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1602
randoop.util.Randomness: total calls to random: 1603
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:0 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=295
-------------------------------------------
randoop.util.Randomness: total calls to random: 1604
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 294 sequences.
components: 294
randoop.util.Randomness: total calls to random: 1605
randoop.util.Randomness: total calls to random: 1606
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1607
randoop.util.Randomness: total calls to random: 1608
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  prim : int:1 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=296
-------------------------------------------
randoop.util.Randomness: total calls to random: 1609
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 295 sequences.
components: 295
randoop.util.Randomness: total calls to random: 1610
randoop.util.Randomness: total calls to random: 1611
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1612
randoop.util.Randomness: total calls to random: 1613
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:0 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:0 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=297
-------------------------------------------
randoop.util.Randomness: total calls to random: 1614
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 296 sequences.
components: 296
randoop.util.Randomness: total calls to random: 1615
randoop.util.Randomness: total calls to random: 1616
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1617
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 296 sequences.
components: 296
randoop.util.Randomness: total calls to random: 1618
randoop.util.Randomness: total calls to random: 1619
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1620
randoop.util.Randomness: total calls to random: 1621
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=298
-------------------------------------------
randoop.util.Randomness: total calls to random: 1622
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 297 sequences.
components: 297
randoop.util.Randomness: total calls to random: 1623
randoop.util.Randomness: total calls to random: 1624
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1625
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 297 sequences.
components: 297
randoop.util.Randomness: total calls to random: 1626
randoop.util.Randomness: total calls to random: 1627
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1628
randoop.util.Randomness: total calls to random: 1629
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:1 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  prim : int:10 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=299
-------------------------------------------
randoop.util.Randomness: total calls to random: 1630
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 298 sequences.
components: 298
randoop.util.Randomness: total calls to random: 1631
randoop.util.Randomness: total calls to random: 1632
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1633
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 298 sequences.
components: 298
randoop.util.Randomness: total calls to random: 1634
randoop.util.Randomness: total calls to random: 1635
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1636
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 298 sequences.
components: 298
randoop.util.Randomness: total calls to random: 1637
randoop.util.Randomness: total calls to random: 1638
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1639
randoop.util.Randomness: total calls to random: 1640
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:10 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  method : Package_0.ClassId_0.m_0() : var0 
var12 =  prim : int:0 : 
var13 =  method : Package_0.ClassId_0.k_0(int) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var12 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var13 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=300
-------------------------------------------
randoop.util.Randomness: total calls to random: 1641
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 299 sequences.
components: 299
randoop.util.Randomness: total calls to random: 1642
randoop.util.Randomness: total calls to random: 1643
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1644
randoop.util.Randomness: total calls to random: 1645
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=301
-------------------------------------------
randoop.util.Randomness: total calls to random: 1646
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 300 sequences.
components: 300
randoop.util.Randomness: total calls to random: 1647
randoop.util.Randomness: total calls to random: 1648
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1649
randoop.util.Randomness: total calls to random: 1650
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  prim : int:1 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:10 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=302
-------------------------------------------
randoop.util.Randomness: total calls to random: 1651
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 301 sequences.
components: 301
randoop.util.Randomness: total calls to random: 1652
randoop.util.Randomness: total calls to random: 1653
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 
var17 =  method : Package_0.ClassId_0.m_0() : var0 
var18 =  prim : int:100 : 
var19 =  method : Package_0.ClassId_0.k_0(int) : var0 var18 
var20 =  method : Package_0.ClassId_0.m_0() : var0 
var21 =  method : Package_0.ClassId_0.m_0() : var0 
var22 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var17 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var18 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var19 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var20 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var21 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var22 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=1 [var17]  : true
<randoop.PrimValue, value=1 [var19]  : true
<randoop.PrimValue, value=1 [var20]  : true
<randoop.PrimValue, value=1 [var21]  : true
<randoop.PrimValue, value=1 [var22]  : true

allSequences.size()=303
-------------------------------------------
randoop.util.Randomness: total calls to random: 1654
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 302 sequences.
components: 302
randoop.util.Randomness: total calls to random: 1655
randoop.util.Randomness: total calls to random: 1656
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=304
-------------------------------------------
randoop.util.Randomness: total calls to random: 1657
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 303 sequences.
components: 303
randoop.util.Randomness: total calls to random: 1658
randoop.util.Randomness: total calls to random: 1659
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1660
randoop.util.Randomness: total calls to random: 1661
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:0 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:0 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  prim : int:1 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=305
-------------------------------------------
randoop.util.Randomness: total calls to random: 1662
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 304 sequences.
components: 304
randoop.util.Randomness: total calls to random: 1663
randoop.util.Randomness: total calls to random: 1664
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  prim : int:1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:10 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=306
-------------------------------------------
randoop.util.Randomness: total calls to random: 1665
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 305 sequences.
components: 305
randoop.util.Randomness: total calls to random: 1666
randoop.util.Randomness: total calls to random: 1667
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1668
randoop.util.Randomness: total calls to random: 1669
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1670
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 305 sequences.
components: 305
randoop.util.Randomness: total calls to random: 1671
randoop.util.Randomness: total calls to random: 1672
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1673
randoop.util.Randomness: total calls to random: 1674
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 
var9 =  prim : int:0 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:100 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=307
-------------------------------------------
randoop.util.Randomness: total calls to random: 1675
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 306 sequences.
components: 306
randoop.util.Randomness: total calls to random: 1676
randoop.util.Randomness: total calls to random: 1677
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1678
randoop.util.Randomness: total calls to random: 1679
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=308
-------------------------------------------
randoop.util.Randomness: total calls to random: 1680
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 307 sequences.
components: 307
randoop.util.Randomness: total calls to random: 1681
randoop.util.Randomness: total calls to random: 1682
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1683
randoop.util.Randomness: total calls to random: 1684
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=309
-------------------------------------------
randoop.util.Randomness: total calls to random: 1685
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 308 sequences.
components: 308
randoop.util.Randomness: total calls to random: 1686
randoop.util.Randomness: total calls to random: 1687
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1688
randoop.util.Randomness: total calls to random: 1689
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:10 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=310
-------------------------------------------
randoop.util.Randomness: total calls to random: 1690
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 309 sequences.
components: 309
randoop.util.Randomness: total calls to random: 1691
randoop.util.Randomness: total calls to random: 1692
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1693
randoop.util.Randomness: total calls to random: 1694
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:-1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=311
-------------------------------------------
randoop.util.Randomness: total calls to random: 1695
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 310 sequences.
components: 310
randoop.util.Randomness: total calls to random: 1696
randoop.util.Randomness: total calls to random: 1697
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:100 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=312
-------------------------------------------
randoop.util.Randomness: total calls to random: 1698
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 311 sequences.
components: 311
randoop.util.Randomness: total calls to random: 1699
randoop.util.Randomness: total calls to random: 1700
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_0.m_0() : var0 
var12 =  method : Package_0.ClassId_0.m_0() : var0 
var13 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=313
-------------------------------------------
randoop.util.Randomness: total calls to random: 1701
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 312 sequences.
components: 312
randoop.util.Randomness: total calls to random: 1702
randoop.util.Randomness: total calls to random: 1703
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1704
randoop.util.Randomness: total calls to random: 1705
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  prim : int:10 : 
var13 =  method : Package_0.ClassId_0.k_0(int) : var0 var12 
var14 =  prim : int:10 : 
var15 =  method : Package_0.ClassId_0.k_0(int) : var0 var14 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var12 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var13 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var14 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var15 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var15]  : true

allSequences.size()=314
-------------------------------------------
randoop.util.Randomness: total calls to random: 1706
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 313 sequences.
components: 313
randoop.util.Randomness: total calls to random: 1707
randoop.util.Randomness: total calls to random: 1708
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1709
randoop.util.Randomness: total calls to random: 1710
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 
var9 =  prim : int:-1 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=315
-------------------------------------------
randoop.util.Randomness: total calls to random: 1711
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 314 sequences.
components: 314
randoop.util.Randomness: total calls to random: 1712
randoop.util.Randomness: total calls to random: 1713
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1714
randoop.util.Randomness: total calls to random: 1715
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  prim : int:-1 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=316
-------------------------------------------
randoop.util.Randomness: total calls to random: 1716
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 315 sequences.
components: 315
randoop.util.Randomness: total calls to random: 1717
randoop.util.Randomness: total calls to random: 1718
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1719
randoop.util.Randomness: total calls to random: 1720
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:1 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=317
-------------------------------------------
randoop.util.Randomness: total calls to random: 1721
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 316 sequences.
components: 316
randoop.util.Randomness: total calls to random: 1722
randoop.util.Randomness: total calls to random: 1723
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1724
randoop.util.Randomness: total calls to random: 1725
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:1 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:10 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=318
-------------------------------------------
randoop.util.Randomness: total calls to random: 1726
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 317 sequences.
components: 317
randoop.util.Randomness: total calls to random: 1727
randoop.util.Randomness: total calls to random: 1728
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1729
randoop.util.Randomness: total calls to random: 1730
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_0.m_0() : var0 
var12 =  prim : int:10 : 
var13 =  method : Package_0.ClassId_0.k_0(int) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var12 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var13 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=319
-------------------------------------------
randoop.util.Randomness: total calls to random: 1731
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 318 sequences.
components: 318
randoop.util.Randomness: total calls to random: 1732
randoop.util.Randomness: total calls to random: 1733
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:10 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:100 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=320
-------------------------------------------
randoop.util.Randomness: total calls to random: 1734
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 319 sequences.
components: 319
randoop.util.Randomness: total calls to random: 1735
randoop.util.Randomness: total calls to random: 1736
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1737
randoop.util.Randomness: total calls to random: 1738
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  prim : int:100 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=321
-------------------------------------------
randoop.util.Randomness: total calls to random: 1739
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 320 sequences.
components: 320
randoop.util.Randomness: total calls to random: 1740
randoop.util.Randomness: total calls to random: 1741
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1742
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 320 sequences.
components: 320
randoop.util.Randomness: total calls to random: 1743
randoop.util.Randomness: total calls to random: 1744
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1745
randoop.util.Randomness: total calls to random: 1746
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=322
-------------------------------------------
randoop.util.Randomness: total calls to random: 1747
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 321 sequences.
components: 321
randoop.util.Randomness: total calls to random: 1748
randoop.util.Randomness: total calls to random: 1749
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1750
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 321 sequences.
components: 321
randoop.util.Randomness: total calls to random: 1751
randoop.util.Randomness: total calls to random: 1752
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1753
randoop.util.Randomness: total calls to random: 1754
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1755
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 321 sequences.
components: 321
randoop.util.Randomness: total calls to random: 1756
randoop.util.Randomness: total calls to random: 1757
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:1 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=323
-------------------------------------------
randoop.util.Randomness: total calls to random: 1758
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 322 sequences.
components: 322
randoop.util.Randomness: total calls to random: 1759
randoop.util.Randomness: total calls to random: 1760
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1761
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 322 sequences.
components: 322
randoop.util.Randomness: total calls to random: 1762
randoop.util.Randomness: total calls to random: 1763
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  prim : int:1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=324
-------------------------------------------
randoop.util.Randomness: total calls to random: 1764
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 323 sequences.
components: 323
randoop.util.Randomness: total calls to random: 1765
randoop.util.Randomness: total calls to random: 1766
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=325
-------------------------------------------
randoop.util.Randomness: total calls to random: 1767
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 324 sequences.
components: 324
randoop.util.Randomness: total calls to random: 1768
randoop.util.Randomness: total calls to random: 1769
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1770
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 324 sequences.
components: 324
randoop.util.Randomness: total calls to random: 1771
randoop.util.Randomness: total calls to random: 1772
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1773
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 324 sequences.
components: 324
randoop.util.Randomness: total calls to random: 1774
randoop.util.Randomness: total calls to random: 1775
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1776
randoop.util.Randomness: total calls to random: 1777
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=326
-------------------------------------------
randoop.util.Randomness: total calls to random: 1778
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 325 sequences.
components: 325
randoop.util.Randomness: total calls to random: 1779
randoop.util.Randomness: total calls to random: 1780
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  method : Package_0.ClassId_0.m_0() : var0 
var12 =  method : Package_0.ClassId_0.m_0() : var0 
var13 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=327
-------------------------------------------
randoop.util.Randomness: total calls to random: 1781
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 326 sequences.
components: 326
randoop.util.Randomness: total calls to random: 1782
randoop.util.Randomness: total calls to random: 1783
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_0.m_0() : var0 
var12 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=328
-------------------------------------------
randoop.util.Randomness: total calls to random: 1784
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 327 sequences.
components: 327
randoop.util.Randomness: total calls to random: 1785
randoop.util.Randomness: total calls to random: 1786
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1787
randoop.util.Randomness: total calls to random: 1788
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_0.m_0() : var0 
var12 =  prim : int:100 : 
var13 =  method : Package_0.ClassId_0.k_0(int) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var12 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var13 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=329
-------------------------------------------
randoop.util.Randomness: total calls to random: 1789
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 328 sequences.
components: 328
randoop.util.Randomness: total calls to random: 1790
randoop.util.Randomness: total calls to random: 1791
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1792
randoop.util.Randomness: total calls to random: 1793
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=330
-------------------------------------------
randoop.util.Randomness: total calls to random: 1794
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 329 sequences.
components: 329
randoop.util.Randomness: total calls to random: 1795
randoop.util.Randomness: total calls to random: 1796
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=331
-------------------------------------------
randoop.util.Randomness: total calls to random: 1797
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 330 sequences.
components: 330
randoop.util.Randomness: total calls to random: 1798
randoop.util.Randomness: total calls to random: 1799
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1800
randoop.util.Randomness: total calls to random: 1801
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_0.m_0() : var0 
var12 =  method : Package_0.ClassId_0.m_0() : var0 
var13 =  prim : int:10 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=332
-------------------------------------------
randoop.util.Randomness: total calls to random: 1802
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 331 sequences.
components: 331
randoop.util.Randomness: total calls to random: 1803
randoop.util.Randomness: total calls to random: 1804
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1805
randoop.util.Randomness: total calls to random: 1806
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:10 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:100 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=333
-------------------------------------------
randoop.util.Randomness: total calls to random: 1807
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 332 sequences.
components: 332
randoop.util.Randomness: total calls to random: 1808
randoop.util.Randomness: total calls to random: 1809
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1810
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 332 sequences.
components: 332
randoop.util.Randomness: total calls to random: 1811
randoop.util.Randomness: total calls to random: 1812
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1813
randoop.util.Randomness: total calls to random: 1814
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  prim : int:1 : 
var13 =  method : Package_0.ClassId_0.k_0(int) : var0 var12 
var14 =  prim : int:10 : 
var15 =  method : Package_0.ClassId_0.k_0(int) : var0 var14 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var12 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var13 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var14 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var15 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var15]  : true

allSequences.size()=334
-------------------------------------------
randoop.util.Randomness: total calls to random: 1815
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 333 sequences.
components: 333
randoop.util.Randomness: total calls to random: 1816
randoop.util.Randomness: total calls to random: 1817
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1818
randoop.util.Randomness: total calls to random: 1819
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  method : Package_0.ClassId_0.m_0() : var0 
var16 =  prim : int:100 : 
var17 =  method : Package_0.ClassId_0.k_0(int) : var0 var16 
var18 =  prim : int:0 : 
var19 =  method : Package_0.ClassId_0.k_0(int) : var0 var18 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var16 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var17 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var18 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var19 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true
<randoop.PrimValue, value=1 [var17]  : true
<randoop.PrimValue, value=1 [var19]  : true

allSequences.size()=335
-------------------------------------------
randoop.util.Randomness: total calls to random: 1820
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 334 sequences.
components: 334
randoop.util.Randomness: total calls to random: 1821
randoop.util.Randomness: total calls to random: 1822
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:10 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:-1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:-1 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true

allSequences.size()=336
-------------------------------------------
randoop.util.Randomness: total calls to random: 1823
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 335 sequences.
components: 335
randoop.util.Randomness: total calls to random: 1824
randoop.util.Randomness: total calls to random: 1825
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=337
-------------------------------------------
randoop.util.Randomness: total calls to random: 1826
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 336 sequences.
components: 336
randoop.util.Randomness: total calls to random: 1827
randoop.util.Randomness: total calls to random: 1828
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1829
randoop.util.Randomness: total calls to random: 1830
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:100 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:1 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=338
-------------------------------------------
randoop.util.Randomness: total calls to random: 1831
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 337 sequences.
components: 337
randoop.util.Randomness: total calls to random: 1832
randoop.util.Randomness: total calls to random: 1833
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1834
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 337 sequences.
components: 337
randoop.util.Randomness: total calls to random: 1835
randoop.util.Randomness: total calls to random: 1836
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1837
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 337 sequences.
components: 337
randoop.util.Randomness: total calls to random: 1838
randoop.util.Randomness: total calls to random: 1839
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:1 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=339
-------------------------------------------
randoop.util.Randomness: total calls to random: 1840
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 338 sequences.
components: 338
randoop.util.Randomness: total calls to random: 1841
randoop.util.Randomness: total calls to random: 1842
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_0.m_0() : var0 
var12 =  method : Package_0.ClassId_0.m_0() : var0 
var13 =  prim : int:10 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 
var17 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var17 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=1 [var17]  : true

allSequences.size()=340
-------------------------------------------
randoop.util.Randomness: total calls to random: 1843
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 339 sequences.
components: 339
randoop.util.Randomness: total calls to random: 1844
randoop.util.Randomness: total calls to random: 1845
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1846
randoop.util.Randomness: total calls to random: 1847
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1848
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 339 sequences.
components: 339
randoop.util.Randomness: total calls to random: 1849
randoop.util.Randomness: total calls to random: 1850
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1851
randoop.util.Randomness: total calls to random: 1852
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:100 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:100 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=341
-------------------------------------------
randoop.util.Randomness: total calls to random: 1853
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 340 sequences.
components: 340
randoop.util.Randomness: total calls to random: 1854
randoop.util.Randomness: total calls to random: 1855
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1856
randoop.util.Randomness: total calls to random: 1857
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:1 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:0 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:100 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=342
-------------------------------------------
randoop.util.Randomness: total calls to random: 1858
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 341 sequences.
components: 341
randoop.util.Randomness: total calls to random: 1859
randoop.util.Randomness: total calls to random: 1860
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1861
randoop.util.Randomness: total calls to random: 1862
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 
var17 =  prim : int:-1 : 
var18 =  method : Package_0.ClassId_0.k_0(int) : var0 var17 
var19 =  method : Package_0.ClassId_0.m_0() : var0 
var20 =  method : Package_0.ClassId_0.m_0() : var0 
var21 =  prim : int:-1 : 
var22 =  method : Package_0.ClassId_0.k_0(int) : var0 var21 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var17 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var18 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var19 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var20 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var21 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var22 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=1 [var19]  : true
<randoop.PrimValue, value=1 [var20]  : true
<randoop.PrimValue, value=1 [var22]  : true

allSequences.size()=343
-------------------------------------------
randoop.util.Randomness: total calls to random: 1863
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 342 sequences.
components: 342
randoop.util.Randomness: total calls to random: 1864
randoop.util.Randomness: total calls to random: 1865
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  prim : int:-1 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=344
-------------------------------------------
randoop.util.Randomness: total calls to random: 1866
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 343 sequences.
components: 343
randoop.util.Randomness: total calls to random: 1867
randoop.util.Randomness: total calls to random: 1868
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1869
randoop.util.Randomness: total calls to random: 1870
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:10 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:-1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:-1 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=345
-------------------------------------------
randoop.util.Randomness: total calls to random: 1871
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 344 sequences.
components: 344
randoop.util.Randomness: total calls to random: 1872
randoop.util.Randomness: total calls to random: 1873
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1874
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 344 sequences.
components: 344
randoop.util.Randomness: total calls to random: 1875
randoop.util.Randomness: total calls to random: 1876
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1877
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 344 sequences.
components: 344
randoop.util.Randomness: total calls to random: 1878
randoop.util.Randomness: total calls to random: 1879
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1880
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 344 sequences.
components: 344
randoop.util.Randomness: total calls to random: 1881
randoop.util.Randomness: total calls to random: 1882
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1883
randoop.util.Randomness: total calls to random: 1884
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:0 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=346
-------------------------------------------
randoop.util.Randomness: total calls to random: 1885
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 345 sequences.
components: 345
randoop.util.Randomness: total calls to random: 1886
randoop.util.Randomness: total calls to random: 1887
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1888
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 345 sequences.
components: 345
randoop.util.Randomness: total calls to random: 1889
randoop.util.Randomness: total calls to random: 1890
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:-1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=347
-------------------------------------------
randoop.util.Randomness: total calls to random: 1891
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 346 sequences.
components: 346
randoop.util.Randomness: total calls to random: 1892
randoop.util.Randomness: total calls to random: 1893
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1894
randoop.util.Randomness: total calls to random: 1895
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  prim : int:10 : 
var13 =  method : Package_0.ClassId_0.k_0(int) : var0 var12 
var14 =  prim : int:1 : 
var15 =  method : Package_0.ClassId_0.k_0(int) : var0 var14 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var12 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var13 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var14 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var15 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var15]  : true

allSequences.size()=348
-------------------------------------------
randoop.util.Randomness: total calls to random: 1896
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 347 sequences.
components: 347
randoop.util.Randomness: total calls to random: 1897
randoop.util.Randomness: total calls to random: 1898
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:1 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:0 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:0 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=349
-------------------------------------------
randoop.util.Randomness: total calls to random: 1899
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 348 sequences.
components: 348
randoop.util.Randomness: total calls to random: 1900
randoop.util.Randomness: total calls to random: 1901
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=350
-------------------------------------------
randoop.util.Randomness: total calls to random: 1902
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 349 sequences.
components: 349
randoop.util.Randomness: total calls to random: 1903
randoop.util.Randomness: total calls to random: 1904
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1905
randoop.util.Randomness: total calls to random: 1906
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=351
-------------------------------------------
randoop.util.Randomness: total calls to random: 1907
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 350 sequences.
components: 350
randoop.util.Randomness: total calls to random: 1908
randoop.util.Randomness: total calls to random: 1909
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=352
-------------------------------------------
randoop.util.Randomness: total calls to random: 1910
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 351 sequences.
components: 351
randoop.util.Randomness: total calls to random: 1911
randoop.util.Randomness: total calls to random: 1912
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1913
randoop.util.Randomness: total calls to random: 1914
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:1 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  prim : int:10 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=353
-------------------------------------------
randoop.util.Randomness: total calls to random: 1915
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 352 sequences.
components: 352
randoop.util.Randomness: total calls to random: 1916
randoop.util.Randomness: total calls to random: 1917
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1918
randoop.util.Randomness: total calls to random: 1919
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 
var9 =  prim : int:-1 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=354
-------------------------------------------
randoop.util.Randomness: total calls to random: 1920
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 353 sequences.
components: 353
randoop.util.Randomness: total calls to random: 1921
randoop.util.Randomness: total calls to random: 1922
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1923
randoop.util.Randomness: total calls to random: 1924
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1925
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 353 sequences.
components: 353
randoop.util.Randomness: total calls to random: 1926
randoop.util.Randomness: total calls to random: 1927
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  prim : int:1 : 
var13 =  method : Package_0.ClassId_0.k_0(int) : var0 var12 
var14 =  prim : int:-1 : 
var15 =  method : Package_0.ClassId_0.k_0(int) : var0 var14 
var16 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var12 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var13 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var14 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var15 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var16 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var15]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=355
-------------------------------------------
randoop.util.Randomness: total calls to random: 1928
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 354 sequences.
components: 354
randoop.util.Randomness: total calls to random: 1929
randoop.util.Randomness: total calls to random: 1930
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:10 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=356
-------------------------------------------
randoop.util.Randomness: total calls to random: 1931
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 355 sequences.
components: 355
randoop.util.Randomness: total calls to random: 1932
randoop.util.Randomness: total calls to random: 1933
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  method : Package_0.ClassId_0.m_0() : var0 
var16 =  prim : int:100 : 
var17 =  method : Package_0.ClassId_0.k_0(int) : var0 var16 
var18 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var16 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var17 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var18 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true
<randoop.PrimValue, value=1 [var17]  : true
<randoop.PrimValue, value=1 [var18]  : true

allSequences.size()=357
-------------------------------------------
randoop.util.Randomness: total calls to random: 1934
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 356 sequences.
components: 356
randoop.util.Randomness: total calls to random: 1935
randoop.util.Randomness: total calls to random: 1936
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=358
-------------------------------------------
randoop.util.Randomness: total calls to random: 1937
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 357 sequences.
components: 357
randoop.util.Randomness: total calls to random: 1938
randoop.util.Randomness: total calls to random: 1939
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  method : Package_0.ClassId_0.m_0() : var0 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true

allSequences.size()=359
-------------------------------------------
randoop.util.Randomness: total calls to random: 1940
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 358 sequences.
components: 358
randoop.util.Randomness: total calls to random: 1941
randoop.util.Randomness: total calls to random: 1942
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=360
-------------------------------------------
randoop.util.Randomness: total calls to random: 1943
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 359 sequences.
components: 359
randoop.util.Randomness: total calls to random: 1944
randoop.util.Randomness: total calls to random: 1945
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1946
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 359 sequences.
components: 359
randoop.util.Randomness: total calls to random: 1947
randoop.util.Randomness: total calls to random: 1948
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1949
randoop.util.Randomness: total calls to random: 1950
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_0.m_0() : var0 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  prim : int:-1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=361
-------------------------------------------
randoop.util.Randomness: total calls to random: 1951
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 360 sequences.
components: 360
randoop.util.Randomness: total calls to random: 1952
randoop.util.Randomness: total calls to random: 1953
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1954
randoop.util.Randomness: total calls to random: 1955
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 
var9 =  prim : int:0 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=362
-------------------------------------------
randoop.util.Randomness: total calls to random: 1956
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 361 sequences.
components: 361
randoop.util.Randomness: total calls to random: 1957
randoop.util.Randomness: total calls to random: 1958
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1959
randoop.util.Randomness: total calls to random: 1960
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  prim : int:100 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  prim : int:0 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 
var12 =  prim : int:100 : 
var13 =  method : Package_0.ClassId_0.k_0(int) : var0 var12 
var14 =  prim : int:-1 : 
var15 =  method : Package_0.ClassId_0.k_0(int) : var0 var14 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var12 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var13 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var14 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var15 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var15]  : true

allSequences.size()=363
-------------------------------------------
randoop.util.Randomness: total calls to random: 1961
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 362 sequences.
components: 362
randoop.util.Randomness: total calls to random: 1962
randoop.util.Randomness: total calls to random: 1963
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1964
randoop.util.Randomness: total calls to random: 1965
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 
var9 =  prim : int:0 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 
var11 =  prim : int:10 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=364
-------------------------------------------
randoop.util.Randomness: total calls to random: 1966
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 363 sequences.
components: 363
randoop.util.Randomness: total calls to random: 1967
randoop.util.Randomness: total calls to random: 1968
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1969
randoop.util.Randomness: total calls to random: 1970
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=365
-------------------------------------------
randoop.util.Randomness: total calls to random: 1971
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 364 sequences.
components: 364
randoop.util.Randomness: total calls to random: 1972
randoop.util.Randomness: total calls to random: 1973
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  prim : int:10 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:-1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=366
-------------------------------------------
randoop.util.Randomness: total calls to random: 1974
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 365 sequences.
components: 365
randoop.util.Randomness: total calls to random: 1975
randoop.util.Randomness: total calls to random: 1976
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1977
randoop.util.Randomness: total calls to random: 1978
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:100 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  prim : int:10 : 
var11 =  method : Package_0.ClassId_0.k_0(int) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var10 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var11 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=367
-------------------------------------------
randoop.util.Randomness: total calls to random: 1979
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 366 sequences.
components: 366
randoop.util.Randomness: total calls to random: 1980
randoop.util.Randomness: total calls to random: 1981
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1982
randoop.util.Randomness: total calls to random: 1983
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 
var8 =  prim : int:1 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:10 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=368
-------------------------------------------
randoop.util.Randomness: total calls to random: 1984
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 367 sequences.
components: 367
randoop.util.Randomness: total calls to random: 1985
randoop.util.Randomness: total calls to random: 1986
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:-1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:10 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 
var11 =  prim : int:0 : 
var12 =  method : Package_0.ClassId_0.k_0(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Package_0.ClassId_0.k_0(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Package_0.ClassId_0.k_0(int) : var0 var15 
var17 =  method : Package_0.ClassId_0.m_0() : var0 
var18 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var12 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var14 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var16 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var17 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var18 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=1 [var17]  : true
<randoop.PrimValue, value=1 [var18]  : true

allSequences.size()=369
-------------------------------------------
randoop.util.Randomness: total calls to random: 1987
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 368 sequences.
components: 368
randoop.util.Randomness: total calls to random: 1988
randoop.util.Randomness: total calls to random: 1989
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1990
randoop.util.Randomness: total calls to random: 1991
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1992
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 368 sequences.
components: 368
randoop.util.Randomness: total calls to random: 1993
randoop.util.Randomness: total calls to random: 1994
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1995
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 368 sequences.
components: 368
randoop.util.Randomness: total calls to random: 1996
randoop.util.Randomness: total calls to random: 1997
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  method : Package_0.ClassId_0.m_0() : var0 
var6 =  prim : int:10 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  method : Package_0.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=370
-------------------------------------------
randoop.util.Randomness: total calls to random: 1998
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 369 sequences.
components: 369
randoop.util.Randomness: total calls to random: 1999
randoop.util.Randomness: total calls to random: 2000
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2001
randoop.util.Randomness: total calls to random: 2002
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  prim : int:0 : 
var2 =  method : Package_0.ClassId_0.k_0(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Package_0.ClassId_0.k_0(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
java.lang.Integer var1 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var2 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var4 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=371
-------------------------------------------
randoop.util.Randomness: total calls to random: 2003
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 370 sequences.
components: 370
randoop.util.Randomness: total calls to random: 2004
randoop.util.Randomness: total calls to random: 2005
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2006
randoop.util.Randomness: total calls to random: 2007
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 2008
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 370 sequences.
components: 370
randoop.util.Randomness: total calls to random: 2009
randoop.util.Randomness: total calls to random: 2010
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:1 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 
var8 =  prim : int:100 : 
var9 =  method : Package_0.ClassId_0.k_0(int) : var0 var8 
var10 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var8 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var9 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=372
-------------------------------------------
randoop.util.Randomness: total calls to random: 2011
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 371 sequences.
components: 371
randoop.util.Randomness: total calls to random: 2012
randoop.util.Randomness: total calls to random: 2013
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2014
randoop.util.Randomness: total calls to random: 2015
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:1 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  prim : int:0 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  prim : int:-1 : 
var8 =  method : Package_0.ClassId_0.k_0(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Package_0.ClassId_0.k_0(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(1);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var8 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var10 = var0.k_0(100);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=373
-------------------------------------------
randoop.util.Randomness: total calls to random: 2016
Selected statement: Package_0.ClassId_0.m_0()
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 372 sequences.
components: 372
randoop.util.Randomness: total calls to random: 2017
randoop.util.Randomness: total calls to random: 2018
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_0.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_0.m_0() : var0 
var3 =  method : Package_0.ClassId_0.m_0() : var0 
var4 =  method : Package_0.ClassId_0.m_0() : var0 
var5 =  prim : int:-1 : 
var6 =  method : Package_0.ClassId_0.k_0(int) : var0 var5 
var7 =  method : Package_0.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_0
Sequence after execution: 
Package_0.ClassId_0 var0 = new Package_0.ClassId_0();
// <NormalExecution object=object-of-type-Package_0.ClassId_0>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var6 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=374
-------------------------------------------
randoop.util.Randomness: total calls to random: 2019
Selected statement: Package_0.ClassId_0.k_0(int)
Will query component set for objects of typeclass Package_0.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_0
getActivesequencesThatYield: returning 373 sequences.
components: 373
randoop.util.Randomness: total calls to random: 2020
randoop.util.Randomness: total calls to random: 2021
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2022
randoop.util.Randomness: total calls to random: 2023
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_1.<init>() : 
var1 =  method : Package_0.ClassId_0.m_0() : var0 
var2 =  prim : int:10 : 
var3 =  method : Package_0.ClassId_0.k_0(int) : var0 var2 
var4 =  prim : int:-1 : 
var5 =  method : Package_0.ClassId_0.k_0(int) : var0 var4 
var6 =  prim : int:0 : 
var7 =  method : Package_0.ClassId_0.k_0(int) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_1
Sequence after execution: 
Package_1.ClassId_1 var0 = new Package_1.ClassId_1();
// <NormalExecution object=object-of-type-Package_1.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var2 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var3 = var0.k_0(10);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var4 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var5 = var0.k_0((-1));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Integer var6 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
long var7 = var0.k_0(0);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=375
